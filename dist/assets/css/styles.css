.hdr .hdr-nav-links-list,
.ftr .ftr-nav,
.home .stn-arts .flexslider,
.stn-intro,
.stn-intro .stn-ctr,
.stn-contact .ctr-contact,
.stn-leaders .ctr-leaders-infos,
.home .stn-info .col-2-ctr,
.stn-methods .ctr-col-3,
.stn-service-info .ctr-list-services
{
    max-width: 1024px;
    margin: 5em auto 0;
}

.stn-intro .titre-intro,
.stn-methods .titre-intro
{
    font-family: 'Cabin', sans-serif; 
    font-size: 1.5em;
    font-weight: 500;

    padding-bottom: .5em;

    text-transform: uppercase;

    color: #85ccd9;
}

@media screen and (min-width: 768px)
{
    .stn-intro .titre-intro,
    .stn-methods .titre-intro
    {
        font-size: 1.5em;

        padding-bottom: 1em;
    }
}

/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
button,
hr,
input
{
    overflow: visible;
}

audio,
canvas,
progress,
video
{
    display: inline-block;
}

progress,
sub,
sup
{
    vertical-align: baseline;
}

[type=checkbox],
[type=radio],
legend
{
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    padding: 0;
}

html
{
    font-family: sans-serif;
    line-height: 1.15;

        -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}

body
{
    margin: 0;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section
{
    display: block;
}

h1
{
    font-size: 2em;

    margin: .67em 0;
}

figure
{
    margin: 1em 40px;
}

hr
{
    -webkit-box-sizing: content-box;
            box-sizing: content-box;
    height: 0;
}

code,
kbd,
pre,
samp
{
    font-family: monospace,monospace;
    font-size: 1em;
}

a
{
    background-color: transparent;

    -webkit-text-decoration-skip: objects;
}

a:active,
a:hover
{
    outline-width: 0;
}

abbr[title]
{
            text-decoration: underline;
            text-decoration: underline dotted; 

    border-bottom: none;

    -webkit-text-decoration: underline dotted;
}

b,
strong
{
    font-weight: bolder;
}

dfn
{
    font-style: italic;
}

mark
{
    color: #000; 
    background-color: #ff0;
}

small
{
    font-size: 80%;
}

sub,
sup
{
    font-size: 75%;
    line-height: 0;

    position: relative;
}

sub
{
    bottom: -.25em;
}

sup
{
    top: -.5em;
}

audio:not([controls])
{
    display: none;

    height: 0;
}

img
{
    border-style: none;
}

svg:not(:root)
{
    overflow: hidden;
}

button,
input,
optgroup,
select,
textarea
{
    font-family: sans-serif;
    font-size: 100%;
    line-height: 1.15;

    margin: 0;
}

button,
select
{
    text-transform: none;
}

[type=reset],
[type=submit],
button,
html [type=button]
{
    -webkit-appearance: button;
}

[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner,
button::-moz-focus-inner
{
    padding: 0; 

    border-style: none;
}

[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring,
button:-moz-focusring
{
    outline: ButtonText dotted 1px;
}

fieldset
{
    margin: 0 2px;
    padding: .35em .625em .75em; 

    border: 1px solid silver;
}

legend
{
    display: table;

    max-width: 100%;

    white-space: normal; 

    color: inherit;
}

textarea
{
    overflow: auto;
}

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button
{
    height: auto;
}

[type=search]
{
    outline-offset: -2px; 

    -webkit-appearance: textfield;
}

[type=search]::-webkit-search-cancel-button,
[type=search]::-webkit-search-decoration
{
    -webkit-appearance: none;
}

::-webkit-file-upload-button
{
    font: inherit; 

    -webkit-appearance: button;
}

summary
{
    display: list-item;
}

[hidden],
template
{
    display: none;
}

/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video
{
    font-size: 100%;

    margin: 0;
    padding: 0;

    vertical-align: baseline; 

    border: 0;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section
{
    display: block;
}

body
{
    line-height: 1;
}

ol,
ul
{
    font: inherit;
    font-size: 100%;

    padding: 0;

    list-style: none;

    vertical-align: baseline; 

    border: 0;
}

blockquote,
q
{
    quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after
{
    content: '';
    content: none;
}

table
{
    border-spacing: 0; 
    border-collapse: collapse;
}

/*
 * jQuery FlexSlider v2.7.1
 * http://www.woothemes.com/flexslider/
 *
 * Copyright 2012 WooThemes
 * Free to use under the GPLv2 and later license.
 * http://www.gnu.org/licenses/gpl-2.0.html
 *
 * Contributing author: Tyler Smith (@mbmufffin)
 *
 */
/* ====================================================================================================================
 * FONT-FACE
 * ====================================================================================================================*/
@font-face
{
    font-family: 'flexslider-icon';
    font-weight: normal;
    font-style: normal; 

    src: url('fonts/flexslider-icon.eot');
    src: url('fonts/flexslider-icon.eot?#iefix') format('embedded-opentype'), url('fonts/flexslider-icon.woff') format('woff'), url('fonts/flexslider-icon.ttf') format('truetype'), url('fonts/flexslider-icon.svg#flexslider-icon') format('svg');
}

/* ====================================================================================================================
 * RESETS
 * ====================================================================================================================*/
.flex-container a:hover,
.flex-slider a:hover
{
    outline: none;
}

.slides,
.slides > li,
.flex-control-nav,
.flex-direction-nav
{
    margin: 0;
    padding: 0;

    list-style: none;
}

.flex-pauseplay span
{
    text-transform: capitalize;
}

/* ====================================================================================================================
 * BASE STYLES
 * ====================================================================================================================*/
.flexslider
{
    margin: 0;
    padding: 0;
}

.flexslider .slides > li
{
    display: none;

    -webkit-backface-visibility: hidden;
}

.flexslider .slides img
{
    display: block; 

    width: 100%;
}

.flexslider .slides:after
{
    line-height: 0;

    display: block;
    visibility: hidden;
    clear: both;

    height: 0; 

    content: '\0020';
}

html[xmlns] .flexslider .slides
{
    display: block;
}

* html .flexslider .slides
{
    height: 1%;
}

.no-js .flexslider .slides > li:first-child
{
    display: block;
}

/* ====================================================================================================================
 * DEFAULT THEME
 * ====================================================================================================================*/
.flexslider
{
    position: relative;

    zoom: 1;

    margin: 0 0 60px;

    border: 4px solid #fff;
    border-radius: 4px;
    background: #fff;
    -webkit-box-shadow: '' 0 1px 4px rgba(0, 0, 0, .2);
            box-shadow: '' 0 1px 4px rgba(0, 0, 0, .2); 

         -o-box-shadow: '' 0 1px 4px rgba(0, 0, 0, .2);
}

.flexslider .slides
{
    zoom: 1;
}

.flexslider .slides img
{
    height: auto;

    -moz-user-select: none;
}

.flex-viewport
{
    max-height: 2000px;

    -webkit-transition: all 1s ease;
            transition: all 1s ease;
}

.loading .flex-viewport
{
    max-height: 300px;
}

@-moz-document url-prefix()
{
    .loading .flex-viewport
    {
        max-height: none;
    }
}

.carousel li
{
    margin-right: 5px;
}

.flex-direction-nav
{
    *height: 0;
}

.flex-direction-nav a
{
    position: absolute;
    z-index: 10;
    top: 50%;

    display: block;
    overflow: hidden;

    width: 40px;
    height: 40px;
    margin: -20px 0 0;

    cursor: pointer;
    -webkit-transition: all .3s ease-in-out;
            transition: all .3s ease-in-out; 
    text-decoration: none;

    opacity: 0;
    color: rgba(0, 0, 0, .8);
    text-shadow: 1px 1px 0 rgba(255, 255, 255, .3);
}

.flex-direction-nav a:before
{
    font-family: 'flexslider-icon';
    font-size: 40px;

    display: inline-block;

    content: '\f001';

    color: rgba(0, 0, 0, .8);
    text-shadow: 1px 1px 0 rgba(255, 255, 255, .3);
}

.flex-direction-nav a.flex-next:before
{
    content: '\f002';
}

.flex-direction-nav .flex-prev
{
    left: -50px;
}

.flex-direction-nav .flex-next
{
    right: -50px;

    text-align: right;
}

.flexslider:hover .flex-direction-nav .flex-prev
{
    left: 10px; 

    opacity: .7;
}

.flexslider:hover .flex-direction-nav .flex-prev:hover
{
    opacity: 1;
}

.flexslider:hover .flex-direction-nav .flex-next
{
    right: 10px; 

    opacity: .7;
}

.flexslider:hover .flex-direction-nav .flex-next:hover
{
    opacity: 1;
}

.flex-direction-nav .flex-disabled
{
    z-index: -1; 

    cursor: default;

    opacity: 0 !important;

    filter: alpha(opacity=0);
}

.flex-pauseplay a
{
    position: absolute;
    z-index: 10;
    bottom: 5px;
    left: 10px;

    display: block;
    overflow: hidden;

    width: 20px;
    height: 20px;

    cursor: pointer;

    opacity: .8;
    color: #000;
}

.flex-pauseplay a:before
{
    font-family: 'flexslider-icon';
    font-size: 20px;

    display: inline-block;

    content: '\f004';
}

.flex-pauseplay a:hover
{
    opacity: 1;
}

.flex-pauseplay a.flex-play:before
{
    content: '\f003';
}

.flex-control-nav
{
    position: absolute;
    bottom: -40px;

    width: 100%;

    text-align: center;
}

.flex-control-nav li
{
    display: inline-block;
    zoom: 1;

    margin: 0 6px;

    *display: inline;
}

.flex-control-paging li a
{
    display: block;

    width: 11px;
    height: 11px;

    cursor: pointer;
    text-indent: -9999px;

    border-radius: 20px; 
    background: #666;
    background: rgba(0, 0, 0, .5);
    -webkit-box-shadow: inset 0 0 3px rgba(0, 0, 0, .3);
            box-shadow: inset 0 0 3px rgba(0, 0, 0, .3);

         -o-box-shadow: inset 0 0 3px rgba(0, 0, 0, .3);
}

.flex-control-paging li a:hover
{
    background: #333;
    background: rgba(0, 0, 0, .7);
}

.flex-control-paging li a.flex-active
{
    cursor: default; 

    background: #000;
    background: rgba(0, 0, 0, .9);
}

.flex-control-thumbs
{
    position: static;

    overflow: hidden; 

    margin: 5px 0 0;
}

.flex-control-thumbs li
{
    float: left;

    width: 25%;
    margin: 0;
}

.flex-control-thumbs img
{
    display: block;

    width: 100%;
    height: auto;

    cursor: pointer;
    -moz-user-select: none;
    -webkit-transition: all 1s ease;
            transition: all 1s ease; 

    opacity: .7;
}

.flex-control-thumbs img:hover
{
    opacity: 1;
}

.flex-control-thumbs .flex-active
{
    cursor: default; 

    opacity: 1;
}

/* ====================================================================================================================
 * RESPONSIVE
 * ====================================================================================================================*/
@media screen and (max-width: 860px)
{
    .flex-direction-nav .flex-prev
    {
        left: 10px; 

        opacity: 1;
    }
    .flex-direction-nav .flex-next
    {
        right: 10px; 

        opacity: 1;
    }
}

/* PAGE : HEADER MOBILE */
.hdr
{
    position: relative;

    height: 50px; 

    background-color: #999;
}
.hdr .hdr-nav-logo
{
    position: absolute;
    top: 50%;
    left: 50%;

    height: 40px; 

    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
}
.hdr .hdr-ctr-logo
{
    cursor: pointer;
}
.hdr .hdr-nav
{
    position: absolute;
    z-index: 10000;
    top: 0;
    left: 0;

    height: 100vh;
    margin: 0;
    padding: 1em;

    -webkit-transition: -webkit-transform 300ms ease;
            transition: -webkit-transform 300ms ease;
            transition:         transform 300ms ease;
            transition:         transform 300ms ease, -webkit-transform 300ms ease;
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); 

    background-color: #85ccd9;
}
.hdr .hdr-nav-btn
{
    position: absolute;
    top: 0;
    left: 100%;

    width: 50px;
    height: 50px;

    cursor: pointer; 

    background-color: #85ccd9;
}
.hdr .hdr-nav-btn div
{
    position: absolute;
    left: 50%; 

    width: 50%;
    height: 5%;

    -webkit-transform: translateX(-50%);
            transform: translateX(-50%);

    background-color: #fff;
}
.hdr .hdr-nav-btn div:nth-last-of-type(1)
{
    top: 36%;

    -webkit-transform: translateX(-50%) translateY(-50%);
            transform: translateX(-50%) translateY(-50%);
}
.hdr .hdr-nav-btn div:nth-last-of-type(2)
{
    top: 50%;

    -webkit-transform: translateX(-50%) translateY(-50%);
            transform: translateX(-50%) translateY(-50%);
}
.hdr .hdr-nav-btn div:nth-last-of-type(3)
{
    top: 64%;

    -webkit-transform: translateX(-50%) translateY(-50%);
            transform: translateX(-50%) translateY(-50%);
}
.hdr .hdr-nav-toggle-cb
{
    position: absolute;
    left: -10000px;
}
.hdr .hdr-nav-toggle-cb + .hdr-nav
{
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%);
}
.hdr .hdr-nav-toggle-cb:checked + .hdr-nav
{
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
}
.hdr .hdr-nav-links-list
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
        flex-direction: column;

    margin-top: 0;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    -webkit-box-pack: unset;
    -ms-flex-pack: unset;
    justify-content: unset;
}
.hdr .hdr-nav-ctr-link
{
    font-family: 'Cabin', sans-serif;

    position: relative;

    margin-bottom: 1em; 
    padding: .5em 1.5em;

    text-align: center;
}
.hdr .hdr-nav-ctr-link:before
{
    position: absolute;
    z-index: 1; 
    top: 50%;
    left: 50%;

    width: 100%;
    height: 100%;

    content: ' ';
    -webkit-transition: all 300ms ease;
            transition: all 300ms ease;
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: 0 0;
            transform-origin: 0 0;

    background-color: #ff592f;
}
.hdr .hdr-nav-ctr-link:hover .hdr-nav-link
{
    color: #fff;
}
.hdr .hdr-nav-ctr-link:hover:before
{
    top: 0; 
    left: 0;

    -webkit-transform: scale(1);
            transform: scale(1);
    -webkit-transform-origin: 0 0;
            transform-origin: 0 0;
}
.hdr .hdr-nav-ctr-link.select
{
    background-color: #ff592f;
}
.hdr .hdr-nav-ctr-link.select:before
{
    content: '';
}
.hdr .hdr-nav-ctr-link.select .hdr-nav-link
{
    color: #fff;
}
.hdr .hdr-nav-link
{
    font-size: .80em;
    font-weight: 600;

    position: relative;
    z-index: 2; 

    -webkit-transition: all 300ms ease;
            transition: all 300ms ease;
    text-decoration: none;
    text-transform: uppercase;

    color: #16445c;
}
.hdr .hidden
{
    display: none;
}
.hdr .hidden
{
    display: none;

    padding: 1em 1em; 

    text-transform: uppercase;

    background-color: #ebf0f08a;
}
.hdr .hidden li a
{
    text-decoration: none;

    color: #16445c;
}
.hdr li:hover a + .hidden,
.hdr .hidden:hover
{
    position: absolute;
    top: 38px;
    left: 174%;

    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
        flex-direction: column;

    width: 7em;

    -webkit-transition: all 300ms ease;
            transition: all 300ms ease;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    text-align: left; 

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    -ms-flex-pack: distribute;
    justify-content: space-around;
}
.hdr .hidden li
{
    padding-bottom: .5em;
}

/* PAGE : HEADER */
@media screen and (min-width: 768px)
{
    .hdr
    {
        height: auto;
        padding: 10px 0 0 0;
    }
    .hdr .hdr-nav
    {
        position: static;

        height: auto; 
        padding: 1em 0;

        background-color: #85ccd9;
    }
    .hdr .hdr-ctr-logo
    {
        cursor: pointer;
    }
    .hdr .hdr-nav-logo
    {
        position: static;
        top: auto;
        left: auto;

        display: block;

        height: auto; 
        margin: 2em auto 2em;

        -webkit-transform: translate(0, 0);
                transform: translate(0, 0);
    }
    .hdr .hdr-nav-links-list
    {
        position: static; 

        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
            flex-direction: row;

        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
        -ms-flex-direction: row;
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
        justify-content: space-between;
    }
    .hdr .hdr-nav-ctr-link
    {
        margin-bottom: 0;
    }
    .hdr .hdr-nav-ctr-link .select
    {
        color: #fff; 
        background-color: #ff592f;
    }
    .hdr .hdr-nav-link
    {
        font-size: .80em;
        font-weight: 600;

        position: relative; 

        -webkit-transition: all 300ms ease;
                transition: all 300ms ease;
        text-decoration: none;
        text-transform: uppercase;

        color: #16445c;
    }
    .hdr .hidden
    {
        display: none;

        padding: 1em 1em; 

        text-transform: uppercase;

        background-color: #ebf0f08a;
    }
    .hdr .hidden li a
    {
        text-decoration: none;

        color: #16445c;
    }
    .hdr li:hover a + .hidden,
    .hdr .hidden:hover
    {
        position: absolute;
        top: 87px;
        right: 50%;
        left: 50%;

        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
            flex-direction: column;

        width: 7em;

        -webkit-transition: all 300ms ease;
                transition: all 300ms ease;
        -webkit-transform: translate(-50%, -50%);
                transform: translate(-50%, -50%);
        text-align: left; 

        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        -ms-flex-pack: distribute;
        justify-content: space-around;
    }
    .hdr .hidden li
    {
        padding-bottom: .5em;
    }
    .hdr .hdr-nav-toggle-cb
    {
        position: absolute;
        left: -10000px;
    }
    .hdr .hdr-nav-toggle-cb + .hdr-nav
    {
        -webkit-transform: none;
                transform: none;
    }
    .hdr .hdr-nav-toggle-cb:checked + .hdr-nav
    {
        -webkit-transform: none;
                transform: none;
    }
    .hdr .hdr-nav-btn
    {
        display: none;
    }
}

.ftr
{
    padding: 1em; 

    background-color: #85ccd9;
}
.ftr .ftr-nav
{
    margin-top: 0;
}
.ftr .ftr-nav .ftr-nav-links-list
{
    display: grid;

    grid-template-rows: 1fr 1fr 1fr;
    grid-row-gap: 1em;
}
.ftr .ftr-nav .ftr-nav-links-list .titre-site
{
    font-family: 'Cabin', sans-serif;
    font-size: 1em;
    font-weight: bold; 
    line-height: 1.4;

    text-align: center;
    letter-spacing: .01em;
    text-transform: uppercase;

    color: #16445c;
}
.ftr .ftr-nav .ftr-nav-links-list .sous-titre-site
{
    font-family: 'Cabin', sans-serif; 
    font-size: 1em;
    line-height: 1.4;

    text-align: center;
    letter-spacing: .01em;
    text-transform: uppercase;

    color: #ff592f;
}
.ftr .ftr-nav .ftr-nav-links-list form
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    width: 100%;
}
.ftr .ftr-nav .ftr-nav-links-list form input
{
    height: 30px;
    margin: 10px 0;

    border: 0 none; 

    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
}
.ftr .ftr-nav .ftr-nav-links-list form button
{
    margin: 10px 0;
    padding: 0 12px;

    cursor: pointer; 
    text-transform: uppercase;

    color: #fff;
    border: 0 none;
    border-radius: 0;
    background-color: #16445c;
}
.ftr .ftr-nav .ftr-nav-links-list:nth-child(3)
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}
.ftr .ftr-nav .ftr-nav-links-list .rs-list
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    color: #16445c; 

    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
    -ms-flex-line-pack: center;
    align-content: center;
}
.ftr .ftr-nav .ftr-nav-links-list .rs-list .ctr-rs
{
    cursor: pointer;
}
.ftr .ftr-nav .ftr-nav-links-list .rs-list .ctr-rs:not(:first-child)
{
    margin-left: 1em;
}

@media screen and (min-width: 768px)
{
    .ftr .ftr-nav .ftr-nav-links-list
    {
        display: grid;

        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: unset;
        grid-row-gap: unset;
        grid-column-gap: 1em;
    }
    .ftr .ftr-nav .ftr-nav-links-list .titre-site
    {
        font-size: 1em;

        text-align: left; 
        text-transform: uppercase;

        color: #16445c;
    }
    .ftr .ftr-nav .ftr-nav-links-list .sous-titre-site
    {
        font-size: 1em;

        text-align: left; 
        letter-spacing: .01em;
        text-transform: uppercase;

        color: #ff592f;
    }
    .ftr .ftr-nav .ftr-nav-links-list:nth-child(2)
    {
        text-align: center;
    }
    .ftr .ftr-nav .ftr-nav-links-list:nth-child(2) form
    {
        padding-right: 2.5em;
    }
    .ftr .ftr-nav .ftr-nav-links-list:nth-child(2) form input
    {
        border: none;
    }
    .ftr .ftr-nav .ftr-nav-links-list:nth-child(2) form button
    {
        cursor: pointer; 
        text-transform: uppercase;

        color: #fff;
        border: none;
        background-color: #16445c;
    }
    .ftr .ftr-nav .ftr-nav-links-list:nth-child(3)
    {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;

        -webkit-box-pack: end;
        -ms-flex-pack: end;
        justify-content: flex-end;
    }
    .ftr .ftr-nav .ftr-nav-links-list .rs-list
    {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;

        color: #16445c;

        -webkit-box-pack: end;
        -ms-flex-pack: end;
        justify-content: flex-end;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
    }
    .ftr .ftr-nav .ftr-nav-links-list .rs-list .ctr-rs
    {
        cursor: pointer;
    }
    .ftr .ftr-nav .ftr-nav-links-list .rs-list .ctr-rs:not(:first-child)
    {
        margin-left: 1em;
    }
}

/* PAGE : HOME */
.home .stn-arts
{
    padding: 3em 0; 

    background-color: #e7eded;
}
.home .stn-arts .flexslider
{
    margin: 40px auto -20px;
    padding: 0;

    border: 0 none;
    border-radius: 0;
    background: transparent;
}
.home .stn-arts .flexslider .slides img
{
    height: unset;
}
.home .stn-arts .flexslider .flex-direction-nav a
{
    top: -30px;

    color: white; 
    background-color: #16445c;
    text-shadow: none;
}
.home .stn-arts .flexslider .flex-direction-nav a:before
{
    content: '';
}
.home .stn-arts .flexslider .flex-direction-nav a.flex-next:before
{
    content: '';
}
.home .stn-arts .flexslider .flex-direction-nav .flex-prev
{
    left: calc(100% - (40px * 2) - 15px);
}
.home .stn-arts .flexslider .flex-direction-nav .flex-next
{
    right: 5px;

    text-align: right;
}
.home .stn-arts .flexslider .flexslider:hover .flex-direction-nav .flex-prev
{
    left: calc(100% - (40px * 2) - 15px); 

    opacity: .7;
}
.home .stn-arts .flexslider .flexslider:hover .flex-direction-nav .flex-prev:hover
{
    opacity: 1;
}
.home .stn-arts .flexslider .flexslider:hover .flex-direction-nav .flex-next
{
    right: 0; 

    opacity: 1;
}
.home .stn-arts .flexslider .flexslider:hover .flex-direction-nav .flex-next:hover
{
    opacity: 1;
}
.home .stn-arts .flexslider .flex-direction-nav .flex-next
{
    opacity: 1;
}
.home .stn-arts .flexslider .flex-direction-nav .flex-prev
{
    left: calc(100% - (40px * 2) - 15px);

    opacity: 1;
}
.home .stn-arts .flexslider .flex-direction-nav .flex-disabled
{
    z-index: 1;

    cursor: default;

    opacity: 1 !important;
}
.home .stn-arts .col-4-ctr
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
}
.home .stn-arts .col-4-ctr .ctr-art
{
    position: relative;

    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
        flex-direction: column; 

    width: 100%;
    margin: 1em 0;
    padding: .5em;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
}
.home .stn-arts .col-4-ctr .ctr-art .ctr-art__img
{
    width: 100%;
    margin: 0 auto 1em;
}
.home .stn-arts .col-4-ctr .ctr-art .col-titre
{
    font-family: 'Cabin', sans-serif; 
    font-size: 1em;
    font-weight: 600;

    letter-spacing: .10em;
    text-transform: uppercase;

    color: #4f7183;
}
.home .stn-arts .col-4-ctr .ctr-art .col-text
{
    font-size: 1em;
    line-height: 1.2em;

    min-height: 160px; 
    margin: 1em 0;

    text-align: left;
}
.home .stn-arts .col-4-ctr .ctr-art .art-link
{
    font-family: 'Cabin', sans-serif;
    font-size: .80em;
    font-weight: 500;

    position: relative; 

    width: 5em;
    padding: .75em 0;

    cursor: pointer;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;

    color: #fff;
    background-color: #ff592f;
}
.home .stn-arts .col-4-ctr .ctr-art .art-link::before
{
    position: absolute;
    z-index: -1;
    top: 0;
    right: -1px;

    width: 5em;
    height: 1.1em;
    padding: .75em 0;

    content: '';

    background-color: #c7bebe;
}

/* PAGE : HOME */
/* PAGE : CONTACT */
/* PAGE : CONTACT */
.stn-intro
{
    padding: 0 1em;
}

.stn-intro
{
    margin: 5em auto;
}
.stn-intro .stn-ctr
{
    display: grid;

    padding: 0; 

    grid-template-rows: 5fr 2fr;
    grid-column-gap: 1.5em;
}
.stn-intro .stn-ctr .titre-intro
{
    font-family: 'Cabin', sans-serif; 
    font-size: 1.5em;

    padding-bottom: 1em;
}
.stn-intro .stn-ctr .ctr-list
{
    padding: 1.5em 0;
}
.stn-intro .stn-ctr .ctr-list .txt-list
{
    color: #16445c;
}
.stn-intro .stn-ctr .ctr-list .txt-list:not(:last-child)
{
    padding-bottom: .5em;
}
.stn-intro .stn-ctr .ctr-list .txt-list::before
{
    font-family: 'Font Awesome 5 Free';

    margin-right: .5em; 

    content: '\f0a4';

    color: #ff592f;
}
.stn-intro .stn-ctr .ctr-description
{
    font-size: inherit; 
    line-height: 20px;
}
.stn-intro .stn-ctr .ctr-img-intro
{
    margin: auto;
}

@media screen and (min-width: 768px)
{
    .stn-intro
    {
        margin: 7em auto 0;
    }
    .stn-intro .stn-ctr
    {
        display: grid;

        padding: 0; 

        grid-template-columns: 5fr 2fr;
        grid-column-gap: 1.5em;
    }
    .stn-intro .stn-ctr .titre-intro
    {
        font-size: 1.5em;

        padding-bottom: 1em;
    }
    .stn-intro .stn-ctr .ctr-list
    {
        padding: 1.5em 0;
    }
    .stn-intro .stn-ctr .ctr-list .txt-list
    {
        color: #16445c;
    }
    .stn-intro .stn-ctr .ctr-list .txt-list:not(:last-child)
    {
        padding-bottom: .5em;
    }
    .stn-intro .stn-ctr .ctr-list .txt-list::before
    {
        font-family: 'Font Awesome 5 Free';

        margin-right: .5em; 

        content: '\f0a4';

        color: #ff592f;
    }
    .stn-intro .stn-ctr .ctr-list .ctr-description
    {
        font-size: inherit; 
        line-height: 20px;
    }
    .stn-intro .stn-ctr .ctr-img-intro
    {
        margin: auto;
    }
}

.stn-contact
{
    margin: 3em 0;
}
.stn-contact .ctr-contact
{
    padding: 0 1em;
}
.stn-contact .ctr-contact .titre-intro
{
    font-family: 'Cabin', sans-serif; 
    font-size: 1.5em;
    font-weight: 500;

    padding-bottom: 1em;

    text-transform: uppercase;

    color: #85ccd9;
}
.stn-contact .ctr-contact .ctr-col-2
{
    display: grid;

    grid-template-rows: 1fr 1fr;
    grid-column-gap: 1.5em;
}
.stn-contact .ctr-contact .ctr-col-2 .ctr-form .txt-contact
{
    margin-bottom: 2em;
}
.stn-contact .ctr-contact .ctr-col-2 .ctr-form .txt-contact .color-s
{
    color: #ff592f;
}
.stn-contact .ctr-contact .ctr-col-2 .ctr-form .color-s
{
    color: #ff592f;
}
.stn-contact .ctr-contact .ctr-col-2 .ctr-form input[name=name],
.stn-contact .ctr-contact .ctr-col-2 .ctr-form [name=email],
.stn-contact .ctr-contact .ctr-col-2 .ctr-form [name=phone],
.stn-contact .ctr-contact .ctr-col-2 .ctr-form [name=message]
{
    width: 70%;
    margin-bottom: 2em;
}
.stn-contact .ctr-contact .ctr-col-2 .ctr-form label
{
    padding-bottom: 2em;
}
.stn-contact .ctr-contact .ctr-col-2 .ctr-form input[type=submit]
{
    font-family: 'Cabin', sans-serif; 
    font-size: .90em;
    font-weight: 500;

    width: 8em;
    height: 2.7em;

    cursor: pointer;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;

    color: #fff;
    border: none;
    background-color: #ff592f;
}
.stn-contact .ctr-contact .ctr-col-2 .ctr-maps .ctr-adresse
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    margin: 2em 0;
}
.stn-contact .ctr-contact .ctr-col-2 .ctr-maps .ctr-adresse .crt-adresse-1
{
    width: 50.0%;
}
.stn-contact .ctr-contact .ctr-col-2 .ctr-maps .ctr-adresse .crt-adresse-1:not(:first-child)
{
    margin-left: 2em;
}
.stn-contact .ctr-contact .ctr-col-2 .ctr-maps .ctr-adresse .crt-adresse-1 .col-titre
{
    margin-bottom: 2em; 

    text-transform: uppercase;

    color: #16445c;
}
.stn-contact .ctr-contact .ctr-col-2 .ctr-maps .ctr-adresse .crt-adresse-1 .txt-details
{
    line-height: 1.2em;
}

@media screen and (min-width: 768px)
{
    .stn-contact .ctr-contact
    {
        padding: 2em 1em;
    }
    .stn-contact .ctr-contact .ctr-col-2
    {
        display: grid;

        grid-template-columns: 1fr 1fr;
        grid-template-rows: 1fr;
        grid-column-gap: 1.5em;
    }
    .stn-contact .ctr-contact .ctr-col-2 .ctr-form .txt-contact
    {
        margin-bottom: 2em;
    }
    .stn-contact .ctr-contact .ctr-col-2 .ctr-form .txt-contact .color-s
    {
        color: #ff592f;
    }
    .stn-contact .ctr-contact .ctr-col-2 .ctr-maps .ctr-adresse
    {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;

        margin: 2em 0;
    }
    .stn-contact .ctr-contact .ctr-col-2 .ctr-maps .ctr-adresse .crt-adresse-1
    {
        width: 50.0%;
    }
    .stn-contact .ctr-contact .ctr-col-2 .ctr-maps .ctr-adresse .crt-adresse-1:not(:first-child)
    {
        margin-left: 2em;
    }
    .stn-contact .ctr-contact .ctr-col-2 .ctr-maps .ctr-adresse .crt-adresse-1 .col-titre
    {
        margin-bottom: 2em; 

        text-transform: uppercase;

        color: #16445c;
    }
    .stn-contact .ctr-contact .ctr-col-2 .ctr-maps .ctr-adresse .crt-adresse-1 .txt-details
    {
        line-height: 1.2em;
    }
}

.stn-leaders
{
    padding: 2em 1em; 

    background-color: #e7eded;
}
.stn-leaders .ctr-leaders-infos
{
    margin: 2em auto;
}
.stn-leaders .ctr-leaders-infos .titre-intro
{
    font-family: 'Cabin', sans-serif; 
    font-size: 1.5em;
    font-weight: 500;

    padding-bottom: 1em;

    text-transform: uppercase;

    color: #85ccd9;
}
.stn-leaders .ctr-leaders-infos .ctr-list
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
        flex-direction: column; 

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
}
.stn-leaders .ctr-leaders-infos .ctr-list .img-list
{
    position: relative;

    overflow: hidden; 

    width: 70%;
    margin: 1em auto;
}
.stn-leaders .ctr-leaders-infos .ctr-list .img-list .img-lead
{
    width: 100%;
    height: 100%;
}
.stn-leaders .ctr-leaders-infos .ctr-list .img-list .ctr-details-info
{
    position: absolute;
    z-index: 2;
    bottom: -5em;

    width: 100%;
    padding: .2em 0; 

    -webkit-transition: all .5s ease-in-out;
            transition: all .5s ease-in-out;
    -webkit-transition-delay: .1s;
            transition-delay: .1s;
    text-align: center;

    color: #fff;
    background-color: #193646bd;
}
.stn-leaders .ctr-leaders-infos .ctr-list .img-list .ctr-details-info .name-lead
{
    text-transform: capitalize;
}
.stn-leaders .ctr-leaders-infos .ctr-list .img-list .ctr-details-info .post-lead
{
    text-transform: capitalize;
}
.stn-leaders .ctr-leaders-infos .ctr-list .img-list:hover .ctr-details-info
{
    bottom: 4px;
}

@media screen and (min-width: 768px)
{
    .stn-leaders
    {
        padding: 2em 1em;
    }
    .stn-leaders .ctr-leaders-infos .titre-intro
    {
        font-family: 'Cabin', sans-serif; 
        font-size: 1.5em;
        font-weight: 500;

        padding-bottom: 1em;

        text-transform: uppercase;

        color: #85ccd9;
    }
    .stn-leaders .ctr-leaders-infos .ctr-list
    {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
            flex-direction: row; 

        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
        -ms-flex-direction: row;
    }
    .stn-leaders .ctr-leaders-infos .ctr-list .img-list
    {
        position: relative;

        overflow: hidden; 

        width: 16.66667%;
        margin: 1em 0;
    }
    .stn-leaders .ctr-leaders-infos .ctr-list .img-list:not(:first-child)
    {
        margin-left: 2em;
    }
    .stn-leaders .ctr-leaders-infos .ctr-list .img-list .img-lead
    {
        width: 100%;
        height: 100%;
    }
    .stn-leaders .ctr-leaders-infos .ctr-list .img-list .ctr-details-info
    {
        position: absolute;
        z-index: 2;
        bottom: -5em;

        padding: .2em 0; 

        -webkit-transition: all .5s ease-in-out;
                transition: all .5s ease-in-out;
        -webkit-transition-delay: .1s;
                transition-delay: .1s;
        text-align: center;

        color: #fff;
        background-color: #193646bd;
    }
    .stn-leaders .ctr-leaders-infos .ctr-list .img-list .ctr-details-info .name-lead
    {
        text-transform: capitalize;
    }
    .stn-leaders .ctr-leaders-infos .ctr-list .img-list .ctr-details-info .post-lead
    {
        text-transform: capitalize;
    }
    .stn-leaders .ctr-leaders-infos .ctr-list .img-list:hover .ctr-details-info
    {
        bottom: 0;
    }
}

.home .stn-info
{
    padding: 3em 1em;
}
.home .stn-info .col-2-ctr
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
        flex-direction: column;

    margin-top: 0;
    padding: 1em 0; 

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
}
.home .stn-info .col-2-ctr .ctr-about
{
    width: 100%;
    margin-right: 1.5em;
}
.home .stn-info .col-2-ctr .ctr-about .col-titre
{
    font-family: 'Cabin', sans-serif; 
    font-size: 20px;

    margin: 1em 0;
    margin-bottom: 1em;

    text-transform: uppercase;

    color: #85ccd9;
}
.home .stn-info .col-2-ctr .ctr-about .description-col-2 .ctr-col-1
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
        flex-direction: column;

    margin-bottom: 2em; 

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
}
.home .stn-info .col-2-ctr .ctr-about .description-col-2 .ctr-col-1 .ctr-img
{
    width: 0; 
    height: 100%;
}
.home .stn-info .col-2-ctr .ctr-about .description-col-2 .ctr-col-1 .col-1-txt .txt-1
{
    font-size: 1em;
    line-height: 1em;

    padding-bottom: 1em;
}
.home .stn-info .col-2-ctr .ctr-about .description-col-2 .ctr-col-1 .col-1-txt .txt-2
{
    font-size: 1em;
}
.home .stn-info .col-2-ctr .ctr-about .description-col-2 .ctr-col-2 .col-2-txt .txt-1
{
    font-size: 1em;
    line-height: 1em;

    padding-bottom: 1em;
}
.home .stn-info .col-2-ctr .ctr-about .description-col-2 .ctr-col-2 .col-2-txt .txt-2
{
    font-size: 1em;
}
.home .stn-info .col-2-ctr .ctr-about .description-col-2 .art-link
{
    font-family: 'Cabin', sans-serif;
    font-size: .80em;
    font-weight: 500;

    position: relative; 

    width: 5em;
    padding: .75em 1em;

    cursor: pointer;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;

    color: #fff;
    background-color: #ff592f;
}
.home .stn-info .col-2-ctr .ctr-about .description-col-2 .art-link::before
{
    position: absolute;
    z-index: -1;
    top: 1px;
    right: -2px;

    width: 4.85em;
    height: 1.2em;
    padding: .75em 0;

    content: '';

    background-color: #c7bebe;
}
.home .stn-info .col-2-ctr .ctr-news
{
    width: 100%;
}
.home .stn-info .col-2-ctr .ctr-news .col-titre
{
    font-family: 'Cabin', sans-serif; 
    font-size: 20px;

    margin: 1em 0;

    text-transform: uppercase;

    color: #85ccd9;
}
.home .stn-info .col-2-ctr .ctr-news .description-row-2 .ctr-col-date-1 .ctr-date-event-1
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    margin-bottom: 1em;
}
.home .stn-info .col-2-ctr .ctr-news .description-row-2 .ctr-col-date-1 .ctr-date-event-1 .ctr-date
{
    font-size: 1em;

    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
        flex-direction: column;

    width: 60px;
    height: 60px;
    margin-right: 1em;

    text-align: center;
    text-transform: uppercase; 

    color: #fff;
    background-color: #16445c;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
}
.home .stn-info .col-2-ctr .ctr-news .description-row-2 .ctr-col-date-1 .ctr-date-event-1 .ctr-date .info-jour
{
    font-size: 1.5em; 

    margin-bottom: .5m;
}
.home .stn-info .col-2-ctr .ctr-news .description-row-2 .ctr-col-date-1 .ctr-date-event-1 .ctr-date .info-mois
{
    font-size: .85em;
}
.home .stn-info .col-2-ctr .ctr-news .description-row-2 .ctr-col-date-1 .ctr-date-event-1 .ctr-txt-event .ctr-description
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
        flex-direction: column; 

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
}
.home .stn-info .col-2-ctr .ctr-news .description-row-2 .ctr-col-date-1 .ctr-date-event-1 .ctr-txt-event .ctr-description .date-o
{
    color: #ff592f;
}
.home .stn-info .col-2-ctr .ctr-news .description-row-2 .ctr-col-date-1 .ctr-description-2 .ctr-txt
{
    font-size: 1em;
    line-height: 1em;

    padding-bottom: 1em;
}

@media screen and (min-width: 768px)
{
    .home .stn-info .col-2-ctr
    {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
            flex-direction: row; 

        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
        -ms-flex-direction: row;
    }
    .home .stn-info .col-2-ctr .ctr-about
    {
        width: 60%;
    }
    .home .stn-info .col-2-ctr .ctr-about .description-col-2 .ctr-col-1
    {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
            flex-direction: row; 

        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
        -ms-flex-direction: row;
    }
    .home .stn-info .col-2-ctr .ctr-about .description-col-2 .ctr-col-1 .ctr-img
    {
        width: 80%;
        height: 100%;
        margin-right: 1em;
    }
    .home .stn-info .col-2-ctr .ctr-news
    {
        width: 40%;
    }
}

.stn-methods
{
    margin: 0;
}
.stn-methods .titre-intro
{
    font-family: 'Cabin', sans-serif; 
    font-size: 1.5em;
}
.stn-methods .ctr-col-3
{
    margin: 2em auto;
    padding: 1em 1em;
}
.stn-methods .ctr-col-3 .ctr-methods
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
        flex-direction: column; 

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
}
.stn-methods .ctr-col-3 .ctr-methods .methods-list
{
    position: relative;

    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; 

    width: 100%;
    margin: 1em 0;
}
.stn-methods .ctr-col-3 .ctr-methods .methods-list .txt-method
{
    font-size: 1em;
    line-height: 1.5em; 

    margin-left: .5em;

    text-align: left;
}

@media screen and (min-width: 768px)
{
    .stn-methods
    {
        margin: 5em 0;
    }
    .stn-methods .titre-intro
    {
        font-family: 'Cabin', sans-serif;
    }
    .stn-methods .ctr-col-3
    {
        padding: 0 1em;
    }
    .stn-methods .ctr-col-3 .ctr-methods
    {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
            flex-direction: row; 

        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
        -ms-flex-direction: row;
    }
    .stn-methods .ctr-col-3 .ctr-methods .methods-list
    {
        line-height: 1.2em; 

        width: 33.33333%;
    }
    .stn-methods .ctr-col-3 .ctr-methods .methods-list:not(:first-child)
    {
        margin: 1em 1em;
    }
    .stn-methods .ctr-col-3 .ctr-methods .methods-list .txt-method
    {
        margin-left: 1em;
    }
}

.ctr-list-services
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
        flex-direction: column; 

    padding: 1.5em 0;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
}
.ctr-list-services .service-list
{
    position: relative;

    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
        flex-direction: column;

    width: 100%;
    margin: 1em 0;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
}
.ctr-list-services .service-list .col-titre
{
    font-family: 'Cabin', sans-serif; 

    margin-bottom: 1em;

    text-transform: uppercase;

    color: #16445c;
}
.ctr-list-services .service-list .col-titre .fa-file-text-o
{
    font-size: 2em;

    margin-right: .2em;
}
.ctr-list-services .service-list .col-titre .fa-user
{
    font-size: 2em;

    margin-right: .2em;
}
.ctr-list-services .service-list .col-titre .fa-bar-chart
{
    font-size: 2em;

    margin-right: .2em;
}
.ctr-list-services .service-list .col-titre .fa-comment
{
    font-size: 2em;

    margin-right: .2em;
}
.ctr-list-services .service-list .col-text
{
    font-size: 1em;

    padding: 1em 0;
}
.ctr-list-services .service-list .art-link
{
    font-size: .80em;
    font-weight: 500;

    position: initial;
    position: relative; 

    width: 5em;
    padding: .75em 0;

    cursor: pointer;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;

    color: #fff;
    background-color: #ff592f;
}
.ctr-list-services .service-list .art-link::before
{
    position: absolute;
    z-index: -1;
    top: 1.2px;
    right: -1.2px;

    width: 5em;
    height: 1.1em;
    padding: .75em 0;

    content: '';

    background-color: #c7bebe;
}

@media screen and (min-width: 768px)
{
    .ctr-list-services
    {
        display: grid;

        padding: 1.5em 0;

        grid-template-columns: repeat(4, 1fr);
        grid-gap: 1em;
    }
    .ctr-list-services .service-list
    {
        position: relative;

        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
            flex-direction: column;

        width: 100%;
        margin: 1em 0;

        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
        justify-content: space-between;
    }
    .ctr-list-services .service-list .col-titre
    {
        font-family: 'Cabin', sans-serif; 

        margin-bottom: 1em;

        text-transform: uppercase;

        color: #16445c;
    }
    .ctr-list-services .service-list .col-titre .fa-file-text-o
    {
        font-size: 2em;

        margin-right: .2em;
    }
    .ctr-list-services .service-list .col-titre .fa-user
    {
        font-size: 2em;

        margin-right: .2em;
    }
    .ctr-list-services .service-list .col-titre .fa-bar-chart
    {
        font-size: 2em;

        margin-right: .2em;
    }
    .ctr-list-services .service-list .col-titre .fa-comment
    {
        font-size: 2em;

        margin-right: .2em;
    }
    .ctr-list-services .service-list .col-text
    {
        font-size: 1em;

        padding: 1em 0;
    }
    .ctr-list-services .service-list .art-link
    {
        font-family: 'Cabin', sans-serif;
        font-size: .80em;
        font-weight: 500;

        position: relative; 

        width: 5em;
        padding: .75em 0;

        cursor: pointer;
        text-align: center;
        text-decoration: none;
        text-transform: uppercase;

        color: #fff;
        background-color: #ff592f;
    }
}

.stn-service-info
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; 

    margin: 0;
    padding: 6em 1em;

    background-color: #e7eded;
}
.stn-service-info .service-list
{
    position: relative;

    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
        flex-direction: column; 

    width: 33.33333%;
    margin: 1em 0;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
}
.stn-service-info .service-list:nth-child(2)
{
    padding-top: 1em; 

    text-align: center;
}
.stn-service-info .service-list:nth-child(3)
{
    padding-top: 1em; 

    text-align: right;
}
.stn-service-info .service-list .col-titre
{
    font-family: 'Cabin', sans-serif;
    font-size: 1.5em;
    font-weight: 500;

    padding-bottom: 1em; 

    text-transform: uppercase;

    color: #85ccd9;
}
.stn-service-info .service-list .ctr-list .txt-list
{
    color: #16445c;
}
.stn-service-info .service-list .ctr-list .txt-list:not(:last-child)
{
    padding-bottom: .5em;
}
.stn-service-info .service-list .ctr-list .txt-list .fa-long-arrow-right
{
    margin-right: .5em; 

    color: #ff592f;
}
.stn-service-info .service-list .ctr-faq .ctr-details
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
}
.stn-service-info .service-list .ctr-faq .ctr-details:first-child
{
    margin-bottom: 1em;
}
.stn-service-info .service-list .ctr-faq .ctr-details .rep-q
{
    margin-left: 1em; 

    text-align: left;
}
.stn-service-info .service-list .ctr-description
{
    font-size: 1.1em; 

    text-align: left;
}
.stn-service-info .service-list .ctr-description:not(:last-child)
{
    padding-bottom: .5em;
}
.stn-service-info .ctr-list-services
{
    margin: 0 auto;
}
.stn-service-info .ctr-list-services .service-list
{
    width: 100%;
    margin: 0;
}

@media screen and (min-width: 768px)
{
    .stn-service-info .ctr-list-services
    {
        grid-template-columns: repeat(3, 1fr);
    }
    .stn-service-info .ctr-list-services .service-list
    {
        width: 100%;
        margin: 0;
    }
    .stn-service-info .ctr-list-services .service-list:nth-child(2)
    {
        padding-top: 0;
    }
    .stn-service-info .ctr-list-services .service-list:nth-child(3)
    {
        padding-top: 0;
    }
    .stn-service-info .ctr-list-services .service-list .col-titre
    {
        font-family: 'Cabin', sans-serif;
    }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvX3BsYWNlaG9sZGVycy5zY3NzIiwibW9kdWxlcy9fdmFyaWFibGVzLnNjc3MiLCJwYXJ0aWFscy9fbm9ybWFsaXplLnNjc3MiLCJzdHlsZXMuY3NzIiwicGFydGlhbHMvX3Jlc2V0LnNjc3MiLCJ2ZW5kb3IvX2ZsZXhzbGlkZXIuc2NzcyIsImJsb2Nrcy9faGVhZGVyLnNjc3MiLCJibG9ja3MvX2Zvb3Rlci5zY3NzIiwiYmxvY2tzL19ob21lLnNjc3MiLCJibG9ja3MvX2NvbnRhY3Quc2NzcyIsImJsb2Nrcy9fc2VjdGlvbi1pbnRyby5zY3NzIiwiYmxvY2tzL19zZWN0aW9uLWludHJvLWhvbWUuc2NzcyIsImJsb2Nrcy9fc2VjdGlvbi1pbnRyby1jb250YWN0LnNjc3MiLCJibG9ja3MvX3NlY3Rpb24tbGVhZGVycy1jb250YWN0LnNjc3MiLCJibG9ja3MvX3NlY3Rpb24taW5mby1ob21lLnNjc3MiLCJibG9ja3MvX3NlY3Rpb24tbWV0aG9kcy5zY3NzIiwiYmxvY2tzL19zZXJ2aWNlLWxpc3Quc2NzcyIsImJsb2Nrcy9fc2VydmljZS1pbmZvLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDQyxrQkNDYztFREFkLG1CQUFrQixFQUNsQjs7QUFHRDtFQUNDLGlCQUFnQjtFQUNoQixzQkFBcUI7RUFDckIsZUNIbUI7RURJbkIsMEJBQXlCO0VBQ3pCLGlCQUFnQjtFQUNoQixpQ0FBZ0MsRUFDaEM7O0FBRUQ7RUFFQztJQUNDLGlCQUFnQjtJQUNoQixvQkFBbUIsRUFDbkIsRUFBQTs7QUVyQkYsNEVBQTRFO0FBQUE7RUFBZ0Isa0JBQWdCLEVBQUU7O0FBQUQ7RUFBNEIsc0JBQW9CLEVBQUU7O0FBQUQ7RUFBaUIseUJBQXVCLEVBQUU7O0FDMkJ4TTtFRDNCMk8sK0JBQXFCO1VBQXJCLHVCQUFxQjtFQUFDLFdBQVMsRUFBRTs7QUFBRDtFQUFLLHdCQUFzQjtFQUFDLGtCQUFnQjtFQUFDLDJCQUF5QjtFQUFDLCtCQUE2QixFQUFF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Q2pCLGlCQUFnQixFQUNoQjtJQXRCSDtNQXlCRyxlaEJuQmlCO01nQm9CakIsMEJBQXlCO01BQ3pCLGlCQUFnQjtNQUNoQixpQ0FBZ0M7TUFDaEMsaUJBQWdCO01BQ2hCLG9CQUFtQixFQUNuQjtJQS9CSDtNQW1DSSxlaEI1QmdCLEVnQnNDaEI7TUE3Q0o7UUFzQ0sscUJBQW9CLEVBQ3BCO01BdkNMO1FBMENLLGVoQmxDYztRZ0JtQ2QsbUJBQWtCLEVBQ2xCO0lBNUNMO01Ba0RJLHFCQUFhO01BQWIscUJBQWE7TUFBYixjQUFhLEVBVWI7TUE1REo7UUFzREssbUJBQWtCLEVBQ2xCO01BdkRMO1FBeURLLGlCQUFnQjtRQUNoQixpQkFBZ0IsRUFDaEI7SUEzREw7TUFnRUcsaUJBQWdCO01BQ2hCLGlCQUFnQixFQUtoQjtNQXRFSDtRQW9FSSxxQkFBb0IsRUFDcEI7RUFyRUo7SUEyRUUsZUFBYyxFQUtkO0lBaEZGO01BNkVHLFlBQVc7TUFDWCxVQUFTLEVBQ1Q7O0FBSUg7RUFuRkE7SUFzRkcsc0NBQXFDLEVBbUJyQztJQXpHSDtNQXlGSSxZQUFXO01BQ1gsVUFBUyxFQWNUO01BcEJIO1FBU0ksaUJBQWdCLEVBQ2hCO01BVko7UUFjSSxpQkFBZ0IsRUFDaEI7TUFmSjtRQWtCSSxpQ0FBZ0MsRUFDaEMsRUFBQSIsImZpbGUiOiJzdHlsZXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRGltZW5zaW9ucyBwYXIgZMOpZmF1dCBwb3VyIHVuZSBzZWN0aW9uIGRlIHBhZ2VcclxuJWNvbnRhaW5lci1teHcge1xyXG5cdG1heC13aWR0aDogJGxhcHRvcDtcclxuXHRtYXJnaW46IDVlbSBhdXRvIDA7XHJcbn1cclxuXHJcbi8vIFN0eWxlcyBwYXIgZMOpZmF1dCBwb3VyIHVuIHRpdHJlIGRlIHNlY3Rpb25cclxuJXNlY3Rpb24tdGl0bGUtc21hbGwge1xyXG5cdGZvbnQtc2l6ZTogMS41ZW07XHJcblx0cGFkZGluZy1ib3R0b206IDAuNWVtO1xyXG5cdGNvbG9yOiAkYmxldS1jbGFpcjtcclxuXHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XHJcblx0Zm9udC1mYW1pbHk6ICdDYWJpbicsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR0YWJsZXR0ZS1wb3J0cmFpdCkge1xyXG5cdC8vIFN0eWxlcyBwb3VyIHLDqXNvbHV0aW9uIHN1cMOpcmlldXJlcyDDoCBbXSBwb3VyIHVuIHRpdHJlIGRlIHNlY3Rpb25cclxuXHQlc2VjdGlvbi10aXRsZS1sYXJnZSB7XHJcblx0XHRmb250LXNpemU6IDEuNWVtO1xyXG5cdFx0cGFkZGluZy1ib3R0b206IDFlbTtcclxuXHR9XHJcbn0iLCJcbi8vIEJyZWFrcG9pbnRzXG4kdGFibGV0dGUtcG9ydHJhaXQ6IDc2OHB4O1xuJGxhcHRvcDogMTAyNHB4O1xuXG4vLyBQYWxldHRlIGR1IHNpdGVcbiRtYWluLWNvbG9yOiAjOTkwMDAwO1xuJGJsZXUtY2xhaXI6ICM4NWNjZDk7XG4kYmxldS1mb25jZTogIzE2NDQ1YztcbiR2ZXJtaWxsb246ICNmZjU5MmY7XG4kZ3Jpcy1tb3llbjogIzk5OTk5OTtcbiRub2lyOiAjMDAwMDAwO1xuJGJsYW5jOiAjRkZGRkZGO1xuXG4vLyBMYXlvdXRcbiRjb2x1bW4td2lkdGg6IDMzLjMzMzMzMzMzMyU7XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2NS4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovYnV0dG9uLGhyLGlucHV0e292ZXJmbG93OnZpc2libGV9YXVkaW8sY2FudmFzLHByb2dyZXNzLHZpZGVve2Rpc3BsYXk6aW5saW5lLWJsb2NrfXByb2dyZXNzLHN1YixzdXB7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9W3R5cGU9Y2hlY2tib3hdLFt0eXBlPXJhZGlvXSxsZWdlbmR7Ym94LXNpemluZzpib3JkZXItYm94O3BhZGRpbmc6MH1odG1se2ZvbnQtZmFtaWx5OnNhbnMtc2VyaWY7bGluZS1oZWlnaHQ6MS4xNTstbXMtdGV4dC1zaXplLWFkanVzdDoxMDAlOy13ZWJraXQtdGV4dC1zaXplLWFkanVzdDoxMDAlfWJvZHl7bWFyZ2luOjB9YXJ0aWNsZSxhc2lkZSxkZXRhaWxzLGZpZ2NhcHRpb24sZmlndXJlLGZvb3RlcixoZWFkZXIsbWFpbixtZW51LG5hdixzZWN0aW9ue2Rpc3BsYXk6YmxvY2t9aDF7Zm9udC1zaXplOjJlbTttYXJnaW46LjY3ZW0gMH1maWd1cmV7bWFyZ2luOjFlbSA0MHB4fWhye2JveC1zaXppbmc6Y29udGVudC1ib3g7aGVpZ2h0OjB9Y29kZSxrYmQscHJlLHNhbXB7Zm9udC1mYW1pbHk6bW9ub3NwYWNlLG1vbm9zcGFjZTtmb250LXNpemU6MWVtfWF7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDstd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOm9iamVjdHN9YTphY3RpdmUsYTpob3ZlcntvdXRsaW5lLXdpZHRoOjB9YWJiclt0aXRsZV17Ym9yZGVyLWJvdHRvbTpub25lO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSBkb3R0ZWR9YixzdHJvbmd7Zm9udC13ZWlnaHQ6Ym9sZGVyfWRmbntmb250LXN0eWxlOml0YWxpY31tYXJre2JhY2tncm91bmQtY29sb3I6I2ZmMDtjb2xvcjojMDAwfXNtYWxse2ZvbnQtc2l6ZTo4MCV9c3ViLHN1cHtmb250LXNpemU6NzUlO2xpbmUtaGVpZ2h0OjA7cG9zaXRpb246cmVsYXRpdmV9c3Vie2JvdHRvbTotLjI1ZW19c3Vwe3RvcDotLjVlbX1hdWRpbzpub3QoW2NvbnRyb2xzXSl7ZGlzcGxheTpub25lO2hlaWdodDowfWltZ3tib3JkZXItc3R5bGU6bm9uZX1zdmc6bm90KDpyb290KXtvdmVyZmxvdzpoaWRkZW59YnV0dG9uLGlucHV0LG9wdGdyb3VwLHNlbGVjdCx0ZXh0YXJlYXtmb250LWZhbWlseTpzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxMDAlO2xpbmUtaGVpZ2h0OjEuMTU7bWFyZ2luOjB9YnV0dG9uLHNlbGVjdHt0ZXh0LXRyYW5zZm9ybTpub25lfVt0eXBlPXJlc2V0XSxbdHlwZT1zdWJtaXRdLGJ1dHRvbixodG1sIFt0eXBlPWJ1dHRvbl17LXdlYmtpdC1hcHBlYXJhbmNlOmJ1dHRvbn1bdHlwZT1idXR0b25dOjotbW96LWZvY3VzLWlubmVyLFt0eXBlPXJlc2V0XTo6LW1vei1mb2N1cy1pbm5lcixbdHlwZT1zdWJtaXRdOjotbW96LWZvY3VzLWlubmVyLGJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcntib3JkZXItc3R5bGU6bm9uZTtwYWRkaW5nOjB9W3R5cGU9YnV0dG9uXTotbW96LWZvY3VzcmluZyxbdHlwZT1yZXNldF06LW1vei1mb2N1c3JpbmcsW3R5cGU9c3VibWl0XTotbW96LWZvY3VzcmluZyxidXR0b246LW1vei1mb2N1c3Jpbmd7b3V0bGluZTpCdXR0b25UZXh0IGRvdHRlZCAxcHh9ZmllbGRzZXR7Ym9yZGVyOjFweCBzb2xpZCBzaWx2ZXI7bWFyZ2luOjAgMnB4O3BhZGRpbmc6LjM1ZW0gLjYyNWVtIC43NWVtfWxlZ2VuZHtjb2xvcjppbmhlcml0O2Rpc3BsYXk6dGFibGU7bWF4LXdpZHRoOjEwMCU7d2hpdGUtc3BhY2U6bm9ybWFsfXRleHRhcmVhe292ZXJmbG93OmF1dG99W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixbdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9ue2hlaWdodDphdXRvfVt0eXBlPXNlYXJjaF17LXdlYmtpdC1hcHBlYXJhbmNlOnRleHRmaWVsZDtvdXRsaW5lLW9mZnNldDotMnB4fVt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sW3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbnstd2Via2l0LWFwcGVhcmFuY2U6bm9uZX06Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uey13ZWJraXQtYXBwZWFyYW5jZTpidXR0b247Zm9udDppbmhlcml0fXN1bW1hcnl7ZGlzcGxheTpsaXN0LWl0ZW19W2hpZGRlbl0sdGVtcGxhdGV7ZGlzcGxheTpub25lfSIsIi5oZHIgLmhkci1uYXYtbGlua3MtbGlzdCwgLmZ0ciAuZnRyLW5hdiwgLmhvbWUgLnN0bi1hcnRzIC5mbGV4c2xpZGVyLCAuc3RuLWludHJvLCAuc3RuLWludHJvIC5zdG4tY3RyLCAuc3RuLWNvbnRhY3QgLmN0ci1jb250YWN0LCAuc3RuLWxlYWRlcnMgLmN0ci1sZWFkZXJzLWluZm9zLCAuaG9tZSAuc3RuLWluZm8gLmNvbC0yLWN0ciwgLnN0bi1tZXRob2RzIC5jdHItY29sLTMsIC5zdG4tc2VydmljZS1pbmZvIC5jdHItbGlzdC1zZXJ2aWNlcyB7XG4gIG1heC13aWR0aDogMTAyNHB4O1xuICBtYXJnaW46IDVlbSBhdXRvIDA7IH1cblxuLnN0bi1pbnRybyAudGl0cmUtaW50cm8sIC5zdG4tbWV0aG9kcyAudGl0cmUtaW50cm8ge1xuICBmb250LXNpemU6IDEuNWVtO1xuICBwYWRkaW5nLWJvdHRvbTogMC41ZW07XG4gIGNvbG9yOiAjODVjY2Q5O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuc3RuLWludHJvIC50aXRyZS1pbnRybywgLnN0bi1tZXRob2RzIC50aXRyZS1pbnRybyB7XG4gICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMWVtOyB9IH1cblxuLyohIG5vcm1hbGl6ZS5jc3MgdjUuMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuYnV0dG9uLCBociwgaW5wdXQge1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG5hdWRpbywgY2FudmFzLCBwcm9ncmVzcywgdmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxucHJvZ3Jlc3MsIHN1Yiwgc3VwIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cblt0eXBlPWNoZWNrYm94XSwgW3R5cGU9cmFkaW9dLCBsZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nOiAwOyB9XG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IH1cblxuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBmb290ZXIsIGhlYWRlciwgbWFpbiwgbWVudSwgbmF2LCBzZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAuNjdlbSAwOyB9XG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwOyB9XG5cbmNvZGUsIGtiZCwgcHJlLCBzYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSxtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgfVxuXG5hOmFjdGl2ZSwgYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7IH1cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyB9XG5cbmIsIHN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbnN1Yiwgc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtLjVlbTsgfVxuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG5idXR0b24sIGlucHV0LCBvcHRncm91cCwgc2VsZWN0LCB0ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICBtYXJnaW46IDA7IH1cblxuYnV0dG9uLCBzZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG5bdHlwZT1yZXNldF0sIFt0eXBlPXN1Ym1pdF0sIGJ1dHRvbiwgaHRtbCBbdHlwZT1idXR0b25dIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxuW3R5cGU9YnV0dG9uXTo6LW1vei1mb2N1cy1pbm5lciwgW3R5cGU9cmVzZXRdOjotbW96LWZvY3VzLWlubmVyLCBbdHlwZT1zdWJtaXRdOjotbW96LWZvY3VzLWlubmVyLCBidXR0b246Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuW3R5cGU9YnV0dG9uXTotbW96LWZvY3VzcmluZywgW3R5cGU9cmVzZXRdOi1tb3otZm9jdXNyaW5nLCBbdHlwZT1zdWJtaXRdOi1tb3otZm9jdXNyaW5nLCBidXR0b246LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiBCdXR0b25UZXh0IGRvdHRlZCAxcHg7IH1cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCBzaWx2ZXI7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IC4zNWVtIC42MjVlbSAuNzVlbTsgfVxuXG5sZWdlbmQge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZGlzcGxheTogdGFibGU7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgfVxuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cblt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sIFt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuW3R5cGU9c2VhcmNoXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgfVxuXG5bdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLCBbdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgZm9udDogaW5oZXJpdDsgfVxuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtOyB9XG5cbltoaWRkZW5dLCB0ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC8gXHJcbiAgIHYyLjAgfCAyMDExMDEyNlxyXG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxyXG4qL1xuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxuZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcbmIsIHUsIGksIGNlbnRlcixcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxuYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcbnRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxOyB9XG5cbm9sLCB1bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250OiBpbmhlcml0O1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuYmxvY2txdW90ZSwgcSB7XG4gIHF1b3Rlczogbm9uZTsgfVxuXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGNvbnRlbnQ6IG5vbmU7IH1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDsgfVxuXG4vKlxuICogalF1ZXJ5IEZsZXhTbGlkZXIgdjIuNy4xXG4gKiBodHRwOi8vd3d3Lndvb3RoZW1lcy5jb20vZmxleHNsaWRlci9cbiAqXG4gKiBDb3B5cmlnaHQgMjAxMiBXb29UaGVtZXNcbiAqIEZyZWUgdG8gdXNlIHVuZGVyIHRoZSBHUEx2MiBhbmQgbGF0ZXIgbGljZW5zZS5cbiAqIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9ncGwtMi4wLmh0bWxcbiAqXG4gKiBDb250cmlidXRpbmcgYXV0aG9yOiBUeWxlciBTbWl0aCAoQG1ibXVmZmZpbilcbiAqXG4gKi9cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBGT05ULUZBQ0VcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ2ZsZXhzbGlkZXItaWNvbic7XG4gIHNyYzogdXJsKFwiZm9udHMvZmxleHNsaWRlci1pY29uLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCJmb250cy9mbGV4c2xpZGVyLWljb24uZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiZm9udHMvZmxleHNsaWRlci1pY29uLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiZm9udHMvZmxleHNsaWRlci1pY29uLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiZm9udHMvZmxleHNsaWRlci1pY29uLnN2ZyNmbGV4c2xpZGVyLWljb25cIikgZm9ybWF0KFwic3ZnXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIFJFU0VUU1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuLmZsZXgtY29udGFpbmVyIGE6aG92ZXIsXG4uZmxleC1zbGlkZXIgYTpob3ZlciB7XG4gIG91dGxpbmU6IG5vbmU7IH1cblxuLnNsaWRlcyxcbi5zbGlkZXMgPiBsaSxcbi5mbGV4LWNvbnRyb2wtbmF2LFxuLmZsZXgtZGlyZWN0aW9uLW5hdiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG4uZmxleC1wYXVzZXBsYXkgc3BhbiB7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOyB9XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCQVNFIFNUWUxFU1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuLmZsZXhzbGlkZXIge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuLmZsZXhzbGlkZXIgLnNsaWRlcyA+IGxpIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuLmZsZXhzbGlkZXIgLnNsaWRlcyBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLmZsZXhzbGlkZXIgLnNsaWRlczphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXFwwMDIwXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjbGVhcjogYm90aDtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBsaW5lLWhlaWdodDogMDtcbiAgaGVpZ2h0OiAwOyB9XG5cbmh0bWxbeG1sbnNdIC5mbGV4c2xpZGVyIC5zbGlkZXMge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4qIGh0bWwgLmZsZXhzbGlkZXIgLnNsaWRlcyB7XG4gIGhlaWdodDogMSU7IH1cblxuLm5vLWpzIC5mbGV4c2xpZGVyIC5zbGlkZXMgPiBsaTpmaXJzdC1jaGlsZCB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBERUZBVUxUIFRIRU1FXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4uZmxleHNsaWRlciB7XG4gIG1hcmdpbjogMCAwIDYwcHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJvcmRlcjogNHB4IHNvbGlkICNmZmY7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgem9vbTogMTtcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA0cHg7XG4gIC1tb3otYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogXCJcIiAwIDFweCA0cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAtbW96LWJveC1zaGFkb3c6IFwiXCIgMCAxcHggNHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgLW8tYm94LXNoYWRvdzogXCJcIiAwIDFweCA0cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICBib3gtc2hhZG93OiBcIlwiIDAgMXB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMik7IH1cblxuLmZsZXhzbGlkZXIgLnNsaWRlcyB7XG4gIHpvb206IDE7IH1cblxuLmZsZXhzbGlkZXIgLnNsaWRlcyBpbWcge1xuICBoZWlnaHQ6IGF1dG87XG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7IH1cblxuLmZsZXgtdmlld3BvcnQge1xuICBtYXgtaGVpZ2h0OiAyMDAwcHg7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDFzIGVhc2U7XG4gIC1tb3otdHJhbnNpdGlvbjogYWxsIDFzIGVhc2U7XG4gIC1tcy10cmFuc2l0aW9uOiBhbGwgMXMgZWFzZTtcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDFzIGVhc2U7XG4gIHRyYW5zaXRpb246IGFsbCAxcyBlYXNlOyB9XG5cbi5sb2FkaW5nIC5mbGV4LXZpZXdwb3J0IHtcbiAgbWF4LWhlaWdodDogMzAwcHg7IH1cblxuQC1tb3otZG9jdW1lbnQgdXJsLXByZWZpeCgpIHtcbiAgLmxvYWRpbmcgLmZsZXgtdmlld3BvcnQge1xuICAgIG1heC1oZWlnaHQ6IG5vbmU7IH0gfVxuXG4uY2Fyb3VzZWwgbGkge1xuICBtYXJnaW4tcmlnaHQ6IDVweDsgfVxuXG4uZmxleC1kaXJlY3Rpb24tbmF2IHtcbiAgKmhlaWdodDogMDsgfVxuXG4uZmxleC1kaXJlY3Rpb24tbmF2IGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBtYXJnaW46IC0yMHB4IDAgMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgei1pbmRleDogMTA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG9wYWNpdHk6IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44KTtcbiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gIC1tb3otdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gIC1tcy10cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0OyB9XG5cbi5mbGV4LWRpcmVjdGlvbi1uYXYgYTpiZWZvcmUge1xuICBmb250LWZhbWlseTogXCJmbGV4c2xpZGVyLWljb25cIjtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGNvbnRlbnQ6ICdcXGYwMDEnO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgpO1xuICB0ZXh0LXNoYWRvdzogMXB4IDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTsgfVxuXG4uZmxleC1kaXJlY3Rpb24tbmF2IGEuZmxleC1uZXh0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGYwMDInOyB9XG5cbi5mbGV4LWRpcmVjdGlvbi1uYXYgLmZsZXgtcHJldiB7XG4gIGxlZnQ6IC01MHB4OyB9XG5cbi5mbGV4LWRpcmVjdGlvbi1uYXYgLmZsZXgtbmV4dCB7XG4gIHJpZ2h0OiAtNTBweDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cblxuLmZsZXhzbGlkZXI6aG92ZXIgLmZsZXgtZGlyZWN0aW9uLW5hdiAuZmxleC1wcmV2IHtcbiAgb3BhY2l0eTogMC43O1xuICBsZWZ0OiAxMHB4OyB9XG5cbi5mbGV4c2xpZGVyOmhvdmVyIC5mbGV4LWRpcmVjdGlvbi1uYXYgLmZsZXgtcHJldjpob3ZlciB7XG4gIG9wYWNpdHk6IDE7IH1cblxuLmZsZXhzbGlkZXI6aG92ZXIgLmZsZXgtZGlyZWN0aW9uLW5hdiAuZmxleC1uZXh0IHtcbiAgb3BhY2l0eTogMC43O1xuICByaWdodDogMTBweDsgfVxuXG4uZmxleHNsaWRlcjpob3ZlciAuZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LW5leHQ6aG92ZXIge1xuICBvcGFjaXR5OiAxOyB9XG5cbi5mbGV4LWRpcmVjdGlvbi1uYXYgLmZsZXgtZGlzYWJsZWQge1xuICBvcGFjaXR5OiAwICFpbXBvcnRhbnQ7XG4gIGZpbHRlcjogYWxwaGEob3BhY2l0eT0wKTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICB6LWluZGV4OiAtMTsgfVxuXG4uZmxleC1wYXVzZXBsYXkgYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMjBweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogNXB4O1xuICBsZWZ0OiAxMHB4O1xuICBvcGFjaXR5OiAwLjg7XG4gIHotaW5kZXg6IDEwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbi5mbGV4LXBhdXNlcGxheSBhOmJlZm9yZSB7XG4gIGZvbnQtZmFtaWx5OiBcImZsZXhzbGlkZXItaWNvblwiO1xuICBmb250LXNpemU6IDIwcHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY29udGVudDogJ1xcZjAwNCc7IH1cblxuLmZsZXgtcGF1c2VwbGF5IGE6aG92ZXIge1xuICBvcGFjaXR5OiAxOyB9XG5cbi5mbGV4LXBhdXNlcGxheSBhLmZsZXgtcGxheTpiZWZvcmUge1xuICBjb250ZW50OiAnXFxmMDAzJzsgfVxuXG4uZmxleC1jb250cm9sLW5hdiB7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogLTQwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uZmxleC1jb250cm9sLW5hdiBsaSB7XG4gIG1hcmdpbjogMCA2cHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgem9vbTogMTtcbiAgKmRpc3BsYXk6IGlubGluZTsgfVxuXG4uZmxleC1jb250cm9sLXBhZ2luZyBsaSBhIHtcbiAgd2lkdGg6IDExcHg7XG4gIGhlaWdodDogMTFweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJhY2tncm91bmQ6ICM2NjY7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LWluZGVudDogLTk5OTlweDtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDAgM3B4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgLW1vei1ib3gtc2hhZG93OiBpbnNldCAwIDAgM3B4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgLW8tYm94LXNoYWRvdzogaW5zZXQgMCAwIDNweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMCAzcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIC1tb3otYm9yZGVyLXJhZGl1czogMjBweDtcbiAgYm9yZGVyLXJhZGl1czogMjBweDsgfVxuXG4uZmxleC1jb250cm9sLXBhZ2luZyBsaSBhOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjcpOyB9XG5cbi5mbGV4LWNvbnRyb2wtcGFnaW5nIGxpIGEuZmxleC1hY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuOSk7XG4gIGN1cnNvcjogZGVmYXVsdDsgfVxuXG4uZmxleC1jb250cm9sLXRodW1icyB7XG4gIG1hcmdpbjogNXB4IDAgMDtcbiAgcG9zaXRpb246IHN0YXRpYztcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4uZmxleC1jb250cm9sLXRodW1icyBsaSB7XG4gIHdpZHRoOiAyNSU7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW46IDA7IH1cblxuLmZsZXgtY29udHJvbC10aHVtYnMgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG4gIG9wYWNpdHk6IC43O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDFzIGVhc2U7XG4gIC1tb3otdHJhbnNpdGlvbjogYWxsIDFzIGVhc2U7XG4gIC1tcy10cmFuc2l0aW9uOiBhbGwgMXMgZWFzZTtcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDFzIGVhc2U7XG4gIHRyYW5zaXRpb246IGFsbCAxcyBlYXNlOyB9XG5cbi5mbGV4LWNvbnRyb2wtdGh1bWJzIGltZzpob3ZlciB7XG4gIG9wYWNpdHk6IDE7IH1cblxuLmZsZXgtY29udHJvbC10aHVtYnMgLmZsZXgtYWN0aXZlIHtcbiAgb3BhY2l0eTogMTtcbiAgY3Vyc29yOiBkZWZhdWx0OyB9XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBSRVNQT05TSVZFXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4NjBweCkge1xuICAuZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LXByZXYge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgbGVmdDogMTBweDsgfVxuICAuZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LW5leHQge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgcmlnaHQ6IDEwcHg7IH0gfVxuXG4vKiBQQUdFIDogSEVBREVSIE1PQklMRSAqL1xuLmhkciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTtcbiAgaGVpZ2h0OiA1MHB4OyB9XG4gIC5oZHIgLmhkci1uYXYtbG9nbyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICBoZWlnaHQ6IDQwcHg7IH1cbiAgLmhkciAuaGRyLWN0ci1sb2dvIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgLmhkciAuaGRyLW5hdiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDEwMDAwO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzg1Y2NkOTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMWVtO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcyBlYXNlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7IH1cbiAgLmhkciAuaGRyLW5hdi1idG4ge1xuICAgIGxlZnQ6IDEwMCU7XG4gICAgdG9wOiAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogNTBweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzg1Y2NkOTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAuaGRyIC5oZHItbmF2LWJ0biBkaXYge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIGhlaWdodDogNSU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgbGVmdDogNTAlOyB9XG4gICAgICAuaGRyIC5oZHItbmF2LWJ0biBkaXY6bnRoLWxhc3Qtb2YtdHlwZSgxKSB7XG4gICAgICAgIHRvcDogMzYlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTsgfVxuICAgICAgLmhkciAuaGRyLW5hdi1idG4gZGl2Om50aC1sYXN0LW9mLXR5cGUoMikge1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7IH1cbiAgICAgIC5oZHIgLmhkci1uYXYtYnRuIGRpdjpudGgtbGFzdC1vZi10eXBlKDMpIHtcbiAgICAgICAgdG9wOiA2NCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpOyB9XG4gIC5oZHIgLmhkci1uYXYtdG9nZ2xlLWNiIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTEwMDAwcHg7IH1cbiAgICAuaGRyIC5oZHItbmF2LXRvZ2dsZS1jYiArIC5oZHItbmF2IHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7IH1cbiAgICAuaGRyIC5oZHItbmF2LXRvZ2dsZS1jYjpjaGVja2VkICsgLmhkci1uYXYge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfVxuICAuaGRyIC5oZHItbmF2LWxpbmtzLWxpc3Qge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogdW5zZXQ7IH1cbiAgLmhkciAuaGRyLW5hdi1jdHItbGluayB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAuNWVtIDEuNWVtO1xuICAgIGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmO1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTsgfVxuICAgIC5oZHIgLmhkci1uYXYtY3RyLWxpbms6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICcgJztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDUwJTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTkyZjtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xuICAgICAgei1pbmRleDogMTsgfVxuICAgIC5oZHIgLmhkci1uYXYtY3RyLWxpbms6aG92ZXIgLmhkci1uYXYtbGluayB7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5oZHIgLmhkci1uYXYtY3RyLWxpbms6aG92ZXI6YmVmb3JlIHtcbiAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDAgMDtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgdG9wOiAwOyB9XG4gICAgLmhkciAuaGRyLW5hdi1jdHItbGluay5zZWxlY3Qge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTkyZjsgfVxuICAgICAgLmhkciAuaGRyLW5hdi1jdHItbGluay5zZWxlY3Q6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogJyc7IH1cbiAgICAgIC5oZHIgLmhkci1uYXYtY3RyLWxpbmsuc2VsZWN0IC5oZHItbmF2LWxpbmsge1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAuaGRyIC5oZHItbmF2LWxpbmsge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBjb2xvcjogIzE2NDQ1YztcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGZvbnQtc2l6ZTogLjgwZW07XG4gICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2U7XG4gICAgei1pbmRleDogMjsgfVxuICAuaGRyIC5oaWRkZW4ge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmhkciAuaGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlYmYwZjA4YTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIHBhZGRpbmc6IDFlbSAxZW07IH1cbiAgLmhkciAuaGlkZGVuIGxpIGEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogIzE2NDQ1YzsgfVxuICAuaGRyIGxpOmhvdmVyIGEgKyAuaGlkZGVuLCAuaGRyIC5oaWRkZW46aG92ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgd2lkdGg6IDdlbTtcbiAgICB0b3A6IDM4cHg7XG4gICAgbGVmdDogMTc0JTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIC5oZHIgLmhpZGRlbiBsaSB7XG4gICAgcGFkZGluZy1ib3R0b206IC41ZW07IH1cblxuLyogUEFHRSA6IEhFQURFUiAqL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmhkciB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHBhZGRpbmc6IDEwcHggMCAwIDA7IH1cbiAgICAuaGRyIC5oZHItbmF2IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICM4NWNjZDk7XG4gICAgICBwYWRkaW5nOiAxZW0gMDtcbiAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgICBoZWlnaHQ6IGF1dG87IH1cbiAgICAuaGRyIC5oZHItY3RyLWxvZ28ge1xuICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgLmhkciAuaGRyLW5hdi1sb2dvIHtcbiAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgICB0b3A6IGF1dG87XG4gICAgICBsZWZ0OiBhdXRvO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCk7XG4gICAgICBtYXJnaW46IDJlbSBhdXRvIDJlbTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgaGVpZ2h0OiBhdXRvOyB9XG4gICAgLmhkciAuaGRyLW5hdi1saW5rcy1saXN0IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgcG9zaXRpb246IHN0YXRpYzsgfVxuICAgIC5oZHIgLmhkci1uYXYtY3RyLWxpbmsge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAgICAgLmhkciAuaGRyLW5hdi1jdHItbGluayAuc2VsZWN0IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTkyZjtcbiAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAuaGRyIC5oZHItbmF2LWxpbmsge1xuICAgICAgY29sb3I6ICMxNjQ0NWM7XG4gICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGZvbnQtc2l6ZTogLjgwZW07XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgIC5oZHIgLmhpZGRlbiB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ViZjBmMDhhO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIHBhZGRpbmc6IDFlbSAxZW07IH1cbiAgICAuaGRyIC5oaWRkZW4gbGkgYSB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBjb2xvcjogIzE2NDQ1YzsgfVxuICAgIC5oZHIgbGk6aG92ZXIgYSArIC5oaWRkZW4sIC5oZHIgLmhpZGRlbjpob3ZlciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgICAgd2lkdGg6IDdlbTtcbiAgICAgIGxlZnQ6IDUwJTtcbiAgICAgIHJpZ2h0OiA1MCU7XG4gICAgICB0b3A6IDg3cHg7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlO1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAgIC5oZHIgLmhpZGRlbiBsaSB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogLjVlbTsgfVxuICAgIC5oZHIgLmhkci1uYXYtdG9nZ2xlLWNiIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IC0xMDAwMHB4OyB9XG4gICAgICAuaGRyIC5oZHItbmF2LXRvZ2dsZS1jYiArIC5oZHItbmF2IHtcbiAgICAgICAgdHJhbnNmb3JtOiBub25lOyB9XG4gICAgICAuaGRyIC5oZHItbmF2LXRvZ2dsZS1jYjpjaGVja2VkICsgLmhkci1uYXYge1xuICAgICAgICB0cmFuc2Zvcm06IG5vbmU7IH1cbiAgICAuaGRyIC5oZHItbmF2LWJ0biB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmZ0ciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4NWNjZDk7XG4gIHBhZGRpbmc6IDFlbTsgfVxuICAuZnRyIC5mdHItbmF2IHtcbiAgICBtYXJnaW4tdG9wOiAwOyB9XG4gICAgLmZ0ciAuZnRyLW5hdiAuZnRyLW5hdi1saW5rcy1saXN0IHtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciAxZnIgMWZyO1xuICAgICAgZ3JpZC1yb3ctZ2FwOiAxZW07IH1cbiAgICAgIC5mdHIgLmZ0ci1uYXYgLmZ0ci1uYXYtbGlua3MtbGlzdCAudGl0cmUtc2l0ZSB7XG4gICAgICAgIGNvbG9yOiAjMTY0NDVjO1xuICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IC4wMWVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmO1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDsgfVxuICAgICAgLmZ0ciAuZnRyLW5hdiAuZnRyLW5hdi1saW5rcy1saXN0IC5zb3VzLXRpdHJlLXNpdGUge1xuICAgICAgICBjb2xvcjogI2ZmNTkyZjtcbiAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAuMDFlbTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBsaW5lLWhlaWdodDogMS40O1xuICAgICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjsgfVxuICAgICAgLmZ0ciAuZnRyLW5hdiAuZnRyLW5hdi1saW5rcy1saXN0IGZvcm0ge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICB3aWR0aDogMTAwJTsgfVxuICAgICAgICAuZnRyIC5mdHItbmF2IC5mdHItbmF2LWxpbmtzLWxpc3QgZm9ybSBpbnB1dCB7XG4gICAgICAgICAgbWFyZ2luOiAxMHB4IDA7XG4gICAgICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgICBib3JkZXI6IDAgbm9uZTsgfVxuICAgICAgICAuZnRyIC5mdHItbmF2IC5mdHItbmF2LWxpbmtzLWxpc3QgZm9ybSBidXR0b24ge1xuICAgICAgICAgIGJvcmRlcjogMCBub25lO1xuICAgICAgICAgIG1hcmdpbjogMTBweCAwO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgICAgICAgcGFkZGluZzogMCAxMnB4O1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE2NDQ1YztcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAgIC5mdHIgLmZ0ci1uYXYgLmZ0ci1uYXYtbGlua3MtbGlzdDpudGgtY2hpbGQoMykge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICAgICAuZnRyIC5mdHItbmF2IC5mdHItbmF2LWxpbmtzLWxpc3QgLnJzLWxpc3Qge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGNvbG9yOiAjMTY0NDVjOyB9XG4gICAgICAgIC5mdHIgLmZ0ci1uYXYgLmZ0ci1uYXYtbGlua3MtbGlzdCAucnMtbGlzdCAuY3RyLXJzIHtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAgICAgICAuZnRyIC5mdHItbmF2IC5mdHItbmF2LWxpbmtzLWxpc3QgLnJzLWxpc3QgLmN0ci1yczpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMWVtOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5mdHIgLmZ0ci1uYXYgLmZ0ci1uYXYtbGlua3MtbGlzdCB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogdW5zZXQ7XG4gICAgZ3JpZC1yb3ctZ2FwOiB1bnNldDtcbiAgICBncmlkLWNvbHVtbi1nYXA6IDFlbTsgfVxuICAgIC5mdHIgLmZ0ci1uYXYgLmZ0ci1uYXYtbGlua3MtbGlzdCAudGl0cmUtc2l0ZSB7XG4gICAgICBjb2xvcjogIzE2NDQ1YztcbiAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgICAuZnRyIC5mdHItbmF2IC5mdHItbmF2LWxpbmtzLWxpc3QgLnNvdXMtdGl0cmUtc2l0ZSB7XG4gICAgICBjb2xvcjogI2ZmNTkyZjtcbiAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAuMDFlbTtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgICAuZnRyIC5mdHItbmF2IC5mdHItbmF2LWxpbmtzLWxpc3Q6bnRoLWNoaWxkKDIpIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgICAgLmZ0ciAuZnRyLW5hdiAuZnRyLW5hdi1saW5rcy1saXN0Om50aC1jaGlsZCgyKSBmb3JtIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMi41ZW07IH1cbiAgICAgICAgLmZ0ciAuZnRyLW5hdiAuZnRyLW5hdi1saW5rcy1saXN0Om50aC1jaGlsZCgyKSBmb3JtIGlucHV0IHtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7IH1cbiAgICAgICAgLmZ0ciAuZnRyLW5hdiAuZnRyLW5hdi1saW5rcy1saXN0Om50aC1jaGlsZCgyKSBmb3JtIGJ1dHRvbiB7XG4gICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTY0NDVjO1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAuZnRyIC5mdHItbmF2IC5mdHItbmF2LWxpbmtzLWxpc3Q6bnRoLWNoaWxkKDMpIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG4gICAgLmZ0ciAuZnRyLW5hdiAuZnRyLW5hdi1saW5rcy1saXN0IC5ycy1saXN0IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgY29sb3I6ICMxNjQ0NWM7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICAgICAuZnRyIC5mdHItbmF2IC5mdHItbmF2LWxpbmtzLWxpc3QgLnJzLWxpc3QgLmN0ci1ycyB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgICAgICAuZnRyIC5mdHItbmF2IC5mdHItbmF2LWxpbmtzLWxpc3QgLnJzLWxpc3QgLmN0ci1yczpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDFlbTsgfSB9XG5cbi8qIFBBR0UgOiBIT01FICovXG4uaG9tZSAuc3RuLWFydHMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlZGVkO1xuICBwYWRkaW5nOiAzZW0gMDsgfVxuICAuaG9tZSAuc3RuLWFydHMgLmZsZXhzbGlkZXIge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiA0MHB4IGF1dG8gLTIwcHg7XG4gICAgYm9yZGVyOiAwIG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgfVxuICAgIC5ob21lIC5zdG4tYXJ0cyAuZmxleHNsaWRlciAuc2xpZGVzIGltZyB7XG4gICAgICBoZWlnaHQ6IHVuc2V0OyB9XG4gICAgLmhvbWUgLnN0bi1hcnRzIC5mbGV4c2xpZGVyIC5mbGV4LWRpcmVjdGlvbi1uYXYgYSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTY0NDVjO1xuICAgICAgdG9wOiAtMzBweDtcbiAgICAgIHRleHQtc2hhZG93OiBub25lO1xuICAgICAgY29sb3I6IHdoaXRlOyB9XG4gICAgLmhvbWUgLnN0bi1hcnRzIC5mbGV4c2xpZGVyIC5mbGV4LWRpcmVjdGlvbi1uYXYgYTpiZWZvcmUge1xuICAgICAgY29udGVudDogJyc7IH1cbiAgICAuaG9tZSAuc3RuLWFydHMgLmZsZXhzbGlkZXIgLmZsZXgtZGlyZWN0aW9uLW5hdiBhLmZsZXgtbmV4dDpiZWZvcmUge1xuICAgICAgY29udGVudDogJyc7IH1cbiAgICAuaG9tZSAuc3RuLWFydHMgLmZsZXhzbGlkZXIgLmZsZXgtZGlyZWN0aW9uLW5hdiAuZmxleC1wcmV2IHtcbiAgICAgIGxlZnQ6IGNhbGMoMTAwJSAtICg0MHB4ICogMikgLSAxNXB4KTsgfVxuICAgIC5ob21lIC5zdG4tYXJ0cyAuZmxleHNsaWRlciAuZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LW5leHQge1xuICAgICAgcmlnaHQ6IDVweDtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gICAgLmhvbWUgLnN0bi1hcnRzIC5mbGV4c2xpZGVyIC5mbGV4c2xpZGVyOmhvdmVyIC5mbGV4LWRpcmVjdGlvbi1uYXYgLmZsZXgtcHJldiB7XG4gICAgICBvcGFjaXR5OiAwLjc7XG4gICAgICBsZWZ0OiBjYWxjKDEwMCUgLSAoNDBweCAqIDIpIC0gMTVweCk7IH1cbiAgICAuaG9tZSAuc3RuLWFydHMgLmZsZXhzbGlkZXIgLmZsZXhzbGlkZXI6aG92ZXIgLmZsZXgtZGlyZWN0aW9uLW5hdiAuZmxleC1wcmV2OmhvdmVyIHtcbiAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuaG9tZSAuc3RuLWFydHMgLmZsZXhzbGlkZXIgLmZsZXhzbGlkZXI6aG92ZXIgLmZsZXgtZGlyZWN0aW9uLW5hdiAuZmxleC1uZXh0IHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgICByaWdodDogMDsgfVxuICAgIC5ob21lIC5zdG4tYXJ0cyAuZmxleHNsaWRlciAuZmxleHNsaWRlcjpob3ZlciAuZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LW5leHQ6aG92ZXIge1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5ob21lIC5zdG4tYXJ0cyAuZmxleHNsaWRlciAuZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LW5leHQge1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5ob21lIC5zdG4tYXJ0cyAuZmxleHNsaWRlciAuZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LXByZXYge1xuICAgICAgbGVmdDogY2FsYygxMDAlIC0gKDQwcHggKiAyKSAtIDE1cHgpO1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5ob21lIC5zdG4tYXJ0cyAuZmxleHNsaWRlciAuZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LWRpc2FibGVkIHtcbiAgICAgIHotaW5kZXg6IDE7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7IH1cbiAgLmhvbWUgLnN0bi1hcnRzIC5jb2wtNC1jdHIge1xuICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgICAuaG9tZSAuc3RuLWFydHMgLmNvbC00LWN0ciAuY3RyLWFydCB7XG4gICAgICBtYXJnaW46IDFlbSAwO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgcGFkZGluZzogMC41ZW07XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gICAgICAuaG9tZSAuc3RuLWFydHMgLmNvbC00LWN0ciAuY3RyLWFydCAuY3RyLWFydF9faW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvIDFlbTsgfVxuICAgICAgLmhvbWUgLnN0bi1hcnRzIC5jb2wtNC1jdHIgLmN0ci1hcnQgLmNvbC10aXRyZSB7XG4gICAgICAgIGNvbG9yOiAjNGY3MTgzO1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IC4xMGVtO1xuICAgICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjsgfVxuICAgICAgLmhvbWUgLnN0bi1hcnRzIC5jb2wtNC1jdHIgLmN0ci1hcnQgLmNvbC10ZXh0IHtcbiAgICAgICAgbWFyZ2luOiAxZW0gMDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgbWluLWhlaWdodDogMTYwcHg7IH1cbiAgICAgIC5ob21lIC5zdG4tYXJ0cyAuY29sLTQtY3RyIC5jdHItYXJ0IC5hcnQtbGluayB7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIGZvbnQtc2l6ZTogLjgwZW07XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjU5MmY7XG4gICAgICAgIHdpZHRoOiA1ZW07XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgcGFkZGluZzogLjc1ZW0gMDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAgIC5ob21lIC5zdG4tYXJ0cyAuY29sLTQtY3RyIC5jdHItYXJ0IC5hcnQtbGluazo6YmVmb3JlIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgICAgdG9wOiAwcHg7XG4gICAgICAgICAgcmlnaHQ6IC0xcHg7XG4gICAgICAgICAgd2lkdGg6IDVlbTtcbiAgICAgICAgICBoZWlnaHQ6IDEuMWVtO1xuICAgICAgICAgIHBhZGRpbmc6IC43NWVtIDA7XG4gICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2M3YmViZTsgfVxuXG4vKiBQQUdFIDogSE9NRSAqL1xuLyogUEFHRSA6IENPTlRBQ1QgKi9cbi8qIFBBR0UgOiBDT05UQUNUICovXG4uc3RuLWludHJvIHtcbiAgcGFkZGluZzogMCAxZW07IH1cblxuLnN0bi1pbnRybyB7XG4gIG1hcmdpbjogNWVtIGF1dG87IH1cbiAgLnN0bi1pbnRybyAuc3RuLWN0ciB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDVmciAyZnI7XG4gICAgZ3JpZC1jb2x1bW4tZ2FwOiAxLjVlbTtcbiAgICBwYWRkaW5nOiAwOyB9XG4gICAgLnN0bi1pbnRybyAuc3RuLWN0ciAudGl0cmUtaW50cm8ge1xuICAgICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxZW07XG4gICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjsgfVxuICAgIC5zdG4taW50cm8gLnN0bi1jdHIgLmN0ci1saXN0IHtcbiAgICAgIHBhZGRpbmc6IDEuNWVtIDA7IH1cbiAgICAgIC5zdG4taW50cm8gLnN0bi1jdHIgLmN0ci1saXN0IC50eHQtbGlzdCB7XG4gICAgICAgIGNvbG9yOiAjMTY0NDVjOyB9XG4gICAgICAgIC5zdG4taW50cm8gLnN0bi1jdHIgLmN0ci1saXN0IC50eHQtbGlzdDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogLjVlbTsgfVxuICAgICAgICAuc3RuLWludHJvIC5zdG4tY3RyIC5jdHItbGlzdCAudHh0LWxpc3Q6OmJlZm9yZSB7XG4gICAgICAgICAgY29udGVudDogXCJcXGYwYTRcIjtcbiAgICAgICAgICBmb250LWZhbWlseTogXCJGb250IEF3ZXNvbWUgNSBGcmVlXCI7XG4gICAgICAgICAgY29sb3I6ICNmZjU5MmY7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAuNWVtOyB9XG4gICAgLnN0bi1pbnRybyAuc3RuLWN0ciAuY3RyLWRlc2NyaXB0aW9uIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0OyB9XG4gICAgLnN0bi1pbnRybyAuc3RuLWN0ciAuY3RyLWltZy1pbnRybyB7XG4gICAgICBtYXJnaW46IGF1dG87IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnN0bi1pbnRybyB7XG4gICAgbWFyZ2luOiA3ZW0gYXV0byAwOyB9XG4gICAgLnN0bi1pbnRybyAuc3RuLWN0ciB7XG4gICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA1ZnIgMmZyO1xuICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAxLjVlbTtcbiAgICAgIHBhZGRpbmc6IDA7IH1cbiAgICAgIC5zdG4taW50cm8gLnN0bi1jdHIgLnRpdHJlLWludHJvIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDFlbTsgfVxuICAgICAgLnN0bi1pbnRybyAuc3RuLWN0ciAuY3RyLWxpc3Qge1xuICAgICAgICBwYWRkaW5nOiAxLjVlbSAwOyB9XG4gICAgICAgIC5zdG4taW50cm8gLnN0bi1jdHIgLmN0ci1saXN0IC50eHQtbGlzdCB7XG4gICAgICAgICAgY29sb3I6ICMxNjQ0NWM7IH1cbiAgICAgICAgICAuc3RuLWludHJvIC5zdG4tY3RyIC5jdHItbGlzdCAudHh0LWxpc3Q6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogLjVlbTsgfVxuICAgICAgICAgIC5zdG4taW50cm8gLnN0bi1jdHIgLmN0ci1saXN0IC50eHQtbGlzdDo6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXFxmMGE0XCI7XG4gICAgICAgICAgICBmb250LWZhbWlseTogXCJGb250IEF3ZXNvbWUgNSBGcmVlXCI7XG4gICAgICAgICAgICBjb2xvcjogI2ZmNTkyZjtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLjVlbTsgfVxuICAgICAgICAuc3RuLWludHJvIC5zdG4tY3RyIC5jdHItbGlzdCAuY3RyLWRlc2NyaXB0aW9uIHtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgICAgICBmb250LXNpemU6IGluaGVyaXQ7IH1cbiAgICAgIC5zdG4taW50cm8gLnN0bi1jdHIgLmN0ci1pbWctaW50cm8ge1xuICAgICAgICBtYXJnaW46IGF1dG87IH0gfVxuXG4uc3RuLWNvbnRhY3Qge1xuICBtYXJnaW46IDNlbSAwOyB9XG4gIC5zdG4tY29udGFjdCAuY3RyLWNvbnRhY3Qge1xuICAgIHBhZGRpbmc6IDBlbSAxZW07IH1cbiAgICAuc3RuLWNvbnRhY3QgLmN0ci1jb250YWN0IC50aXRyZS1pbnRybyB7XG4gICAgICBjb2xvcjogIzg1Y2NkOTtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxZW07XG4gICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjsgfVxuICAgIC5zdG4tY29udGFjdCAuY3RyLWNvbnRhY3QgLmN0ci1jb2wtMiB7XG4gICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMWZyO1xuICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAxLjVlbTsgfVxuICAgICAgLnN0bi1jb250YWN0IC5jdHItY29udGFjdCAuY3RyLWNvbC0yIC5jdHItZm9ybSAudHh0LWNvbnRhY3Qge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07IH1cbiAgICAgICAgLnN0bi1jb250YWN0IC5jdHItY29udGFjdCAuY3RyLWNvbC0yIC5jdHItZm9ybSAudHh0LWNvbnRhY3QgLmNvbG9yLXMge1xuICAgICAgICAgIGNvbG9yOiAjZmY1OTJmOyB9XG4gICAgICAuc3RuLWNvbnRhY3QgLmN0ci1jb250YWN0IC5jdHItY29sLTIgLmN0ci1mb3JtIC5jb2xvci1zIHtcbiAgICAgICAgY29sb3I6ICNmZjU5MmY7IH1cbiAgICAgIC5zdG4tY29udGFjdCAuY3RyLWNvbnRhY3QgLmN0ci1jb2wtMiAuY3RyLWZvcm0gaW5wdXRbbmFtZT1uYW1lXSwgLnN0bi1jb250YWN0IC5jdHItY29udGFjdCAuY3RyLWNvbC0yIC5jdHItZm9ybSBbbmFtZT1lbWFpbF0sIC5zdG4tY29udGFjdCAuY3RyLWNvbnRhY3QgLmN0ci1jb2wtMiAuY3RyLWZvcm0gW25hbWU9cGhvbmVdLCAuc3RuLWNvbnRhY3QgLmN0ci1jb250YWN0IC5jdHItY29sLTIgLmN0ci1mb3JtIFtuYW1lPW1lc3NhZ2VdIHtcbiAgICAgICAgd2lkdGg6IDcwJTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtOyB9XG4gICAgICAuc3RuLWNvbnRhY3QgLmN0ci1jb250YWN0IC5jdHItY29sLTIgLmN0ci1mb3JtIGxhYmVsIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDJlbTsgfVxuICAgICAgLnN0bi1jb250YWN0IC5jdHItY29udGFjdCAuY3RyLWNvbC0yIC5jdHItZm9ybSBpbnB1dFt0eXBlPXN1Ym1pdF0ge1xuICAgICAgICBmb250LXNpemU6IC45MGVtO1xuICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICB3aWR0aDogOGVtO1xuICAgICAgICBoZWlnaHQ6IDIuN2VtO1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTkyZjtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjsgfVxuICAgICAgLnN0bi1jb250YWN0IC5jdHItY29udGFjdCAuY3RyLWNvbC0yIC5jdHItbWFwcyAuY3RyLWFkcmVzc2Uge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBtYXJnaW46IDJlbSAwOyB9XG4gICAgICAgIC5zdG4tY29udGFjdCAuY3RyLWNvbnRhY3QgLmN0ci1jb2wtMiAuY3RyLW1hcHMgLmN0ci1hZHJlc3NlIC5jcnQtYWRyZXNzZS0xIHtcbiAgICAgICAgICB3aWR0aDogNTAuMCU7IH1cbiAgICAgICAgICAuc3RuLWNvbnRhY3QgLmN0ci1jb250YWN0IC5jdHItY29sLTIgLmN0ci1tYXBzIC5jdHItYWRyZXNzZSAuY3J0LWFkcmVzc2UtMTpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMmVtOyB9XG4gICAgICAgICAgLnN0bi1jb250YWN0IC5jdHItY29udGFjdCAuY3RyLWNvbC0yIC5jdHItbWFwcyAuY3RyLWFkcmVzc2UgLmNydC1hZHJlc3NlLTEgLmNvbC10aXRyZSB7XG4gICAgICAgICAgICBjb2xvcjogIzE2NDQ1YztcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07IH1cbiAgICAgICAgICAuc3RuLWNvbnRhY3QgLmN0ci1jb250YWN0IC5jdHItY29sLTIgLmN0ci1tYXBzIC5jdHItYWRyZXNzZSAuY3J0LWFkcmVzc2UtMSAudHh0LWRldGFpbHMge1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMmVtOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5zdG4tY29udGFjdCAuY3RyLWNvbnRhY3Qge1xuICAgIHBhZGRpbmc6IDJlbSAxZW07IH1cbiAgICAuc3RuLWNvbnRhY3QgLmN0ci1jb250YWN0IC5jdHItY29sLTIge1xuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyO1xuICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAxLjVlbTsgfVxuICAgICAgLnN0bi1jb250YWN0IC5jdHItY29udGFjdCAuY3RyLWNvbC0yIC5jdHItZm9ybSAudHh0LWNvbnRhY3Qge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07IH1cbiAgICAgICAgLnN0bi1jb250YWN0IC5jdHItY29udGFjdCAuY3RyLWNvbC0yIC5jdHItZm9ybSAudHh0LWNvbnRhY3QgLmNvbG9yLXMge1xuICAgICAgICAgIGNvbG9yOiAjZmY1OTJmOyB9XG4gICAgICAuc3RuLWNvbnRhY3QgLmN0ci1jb250YWN0IC5jdHItY29sLTIgLmN0ci1tYXBzIC5jdHItYWRyZXNzZSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIG1hcmdpbjogMmVtIDA7IH1cbiAgICAgICAgLnN0bi1jb250YWN0IC5jdHItY29udGFjdCAuY3RyLWNvbC0yIC5jdHItbWFwcyAuY3RyLWFkcmVzc2UgLmNydC1hZHJlc3NlLTEge1xuICAgICAgICAgIHdpZHRoOiA1MC4wJTsgfVxuICAgICAgICAgIC5zdG4tY29udGFjdCAuY3RyLWNvbnRhY3QgLmN0ci1jb2wtMiAuY3RyLW1hcHMgLmN0ci1hZHJlc3NlIC5jcnQtYWRyZXNzZS0xOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyZW07IH1cbiAgICAgICAgICAuc3RuLWNvbnRhY3QgLmN0ci1jb250YWN0IC5jdHItY29sLTIgLmN0ci1tYXBzIC5jdHItYWRyZXNzZSAuY3J0LWFkcmVzc2UtMSAuY29sLXRpdHJlIHtcbiAgICAgICAgICAgIGNvbG9yOiAjMTY0NDVjO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTsgfVxuICAgICAgICAgIC5zdG4tY29udGFjdCAuY3RyLWNvbnRhY3QgLmN0ci1jb2wtMiAuY3RyLW1hcHMgLmN0ci1hZHJlc3NlIC5jcnQtYWRyZXNzZS0xIC50eHQtZGV0YWlscyB7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS4yZW07IH0gfVxuXG4uc3RuLWxlYWRlcnMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlZGVkO1xuICBwYWRkaW5nOiAyZW0gMWVtOyB9XG4gIC5zdG4tbGVhZGVycyAuY3RyLWxlYWRlcnMtaW5mb3Mge1xuICAgIG1hcmdpbjogMmVtIGF1dG87IH1cbiAgICAuc3RuLWxlYWRlcnMgLmN0ci1sZWFkZXJzLWluZm9zIC50aXRyZS1pbnRybyB7XG4gICAgICBjb2xvcjogIzg1Y2NkOTtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxZW07XG4gICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjsgfVxuICAgIC5zdG4tbGVhZGVycyAuY3RyLWxlYWRlcnMtaW5mb3MgLmN0ci1saXN0IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gICAgICAuc3RuLWxlYWRlcnMgLmN0ci1sZWFkZXJzLWluZm9zIC5jdHItbGlzdCAuaW1nLWxpc3Qge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHdpZHRoOiA3MCU7XG4gICAgICAgIG1hcmdpbjogMWVtIGF1dG87XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICAgICAgLnN0bi1sZWFkZXJzIC5jdHItbGVhZGVycy1pbmZvcyAuY3RyLWxpc3QgLmltZy1saXN0IC5pbWctbGVhZCB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlOyB9XG4gICAgICAgIC5zdG4tbGVhZGVycyAuY3RyLWxlYWRlcnMtaW5mb3MgLmN0ci1saXN0IC5pbWctbGlzdCAuY3RyLWRldGFpbHMtaW5mbyB7XG4gICAgICAgICAgei1pbmRleDogMjtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE5MzY0NmJkO1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2UtaW4tb3V0O1xuICAgICAgICAgIHRyYW5zaXRpb24tZGVsYXk6IC4xcztcbiAgICAgICAgICBib3R0b206IC01ZW07XG4gICAgICAgICAgcGFkZGluZzogLjJlbSAwOyB9XG4gICAgICAgICAgLnN0bi1sZWFkZXJzIC5jdHItbGVhZGVycy1pbmZvcyAuY3RyLWxpc3QgLmltZy1saXN0IC5jdHItZGV0YWlscy1pbmZvIC5uYW1lLWxlYWQge1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7IH1cbiAgICAgICAgICAuc3RuLWxlYWRlcnMgLmN0ci1sZWFkZXJzLWluZm9zIC5jdHItbGlzdCAuaW1nLWxpc3QgLmN0ci1kZXRhaWxzLWluZm8gLnBvc3QtbGVhZCB7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsgfVxuICAgICAgICAuc3RuLWxlYWRlcnMgLmN0ci1sZWFkZXJzLWluZm9zIC5jdHItbGlzdCAuaW1nLWxpc3Q6aG92ZXIgLmN0ci1kZXRhaWxzLWluZm8ge1xuICAgICAgICAgIGJvdHRvbTogNHB4OyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5zdG4tbGVhZGVycyB7XG4gICAgcGFkZGluZzogMmVtIDFlbTsgfVxuICAgIC5zdG4tbGVhZGVycyAuY3RyLWxlYWRlcnMtaW5mb3MgLnRpdHJlLWludHJvIHtcbiAgICAgIGNvbG9yOiAjODVjY2Q5O1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICBmb250LXNpemU6IDEuNWVtO1xuICAgICAgcGFkZGluZy1ib3R0b206IDFlbTtcbiAgICAgIGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmOyB9XG4gICAgLnN0bi1sZWFkZXJzIC5jdHItbGVhZGVycy1pbmZvcyAuY3RyLWxpc3Qge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7IH1cbiAgICAgIC5zdG4tbGVhZGVycyAuY3RyLWxlYWRlcnMtaW5mb3MgLmN0ci1saXN0IC5pbWctbGlzdCB7XG4gICAgICAgIG1hcmdpbjogMWVtIDA7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgd2lkdGg6IDE2LjY2NjY3JTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgICAgICAuc3RuLWxlYWRlcnMgLmN0ci1sZWFkZXJzLWluZm9zIC5jdHItbGlzdCAuaW1nLWxpc3Q6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyZW07IH1cbiAgICAgICAgLnN0bi1sZWFkZXJzIC5jdHItbGVhZGVycy1pbmZvcyAuY3RyLWxpc3QgLmltZy1saXN0IC5pbWctbGVhZCB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlOyB9XG4gICAgICAgIC5zdG4tbGVhZGVycyAuY3RyLWxlYWRlcnMtaW5mb3MgLmN0ci1saXN0IC5pbWctbGlzdCAuY3RyLWRldGFpbHMtaW5mbyB7XG4gICAgICAgICAgei1pbmRleDogMjtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE5MzY0NmJkO1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2UtaW4tb3V0O1xuICAgICAgICAgIHRyYW5zaXRpb24tZGVsYXk6IC4xcztcbiAgICAgICAgICBib3R0b206IC01ZW07XG4gICAgICAgICAgcGFkZGluZzogLjJlbSAwOyB9XG4gICAgICAgICAgLnN0bi1sZWFkZXJzIC5jdHItbGVhZGVycy1pbmZvcyAuY3RyLWxpc3QgLmltZy1saXN0IC5jdHItZGV0YWlscy1pbmZvIC5uYW1lLWxlYWQge1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7IH1cbiAgICAgICAgICAuc3RuLWxlYWRlcnMgLmN0ci1sZWFkZXJzLWluZm9zIC5jdHItbGlzdCAuaW1nLWxpc3QgLmN0ci1kZXRhaWxzLWluZm8gLnBvc3QtbGVhZCB7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsgfVxuICAgICAgICAuc3RuLWxlYWRlcnMgLmN0ci1sZWFkZXJzLWluZm9zIC5jdHItbGlzdCAuaW1nLWxpc3Q6aG92ZXIgLmN0ci1kZXRhaWxzLWluZm8ge1xuICAgICAgICAgIGJvdHRvbTogMCU7IH0gfVxuXG4uaG9tZSAuc3RuLWluZm8ge1xuICBwYWRkaW5nOiAzZW0gMWVtOyB9XG4gIC5ob21lIC5zdG4taW5mbyAuY29sLTItY3RyIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwYWRkaW5nOiAxZW0gMDsgfVxuICAgIC5ob21lIC5zdG4taW5mbyAuY29sLTItY3RyIC5jdHItYWJvdXQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEuNWVtOyB9XG4gICAgICAuaG9tZSAuc3RuLWluZm8gLmNvbC0yLWN0ciAuY3RyLWFib3V0IC5jb2wtdGl0cmUge1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICAgICAgY29sb3I6ICM4NWNjZDk7XG4gICAgICAgIG1hcmdpbjogMWVtIDA7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmOyB9XG4gICAgICAuaG9tZSAuc3RuLWluZm8gLmNvbC0yLWN0ciAuY3RyLWFib3V0IC5kZXNjcmlwdGlvbi1jb2wtMiAuY3RyLWNvbC0xIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtOyB9XG4gICAgICAgIC5ob21lIC5zdG4taW5mbyAuY29sLTItY3RyIC5jdHItYWJvdXQgLmRlc2NyaXB0aW9uLWNvbC0yIC5jdHItY29sLTEgLmN0ci1pbWcge1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMCU7IH1cbiAgICAgICAgLmhvbWUgLnN0bi1pbmZvIC5jb2wtMi1jdHIgLmN0ci1hYm91dCAuZGVzY3JpcHRpb24tY29sLTIgLmN0ci1jb2wtMSAuY29sLTEtdHh0IC50eHQtMSB7XG4gICAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDFlbTtcbiAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMWVtOyB9XG4gICAgICAgIC5ob21lIC5zdG4taW5mbyAuY29sLTItY3RyIC5jdHItYWJvdXQgLmRlc2NyaXB0aW9uLWNvbC0yIC5jdHItY29sLTEgLmNvbC0xLXR4dCAudHh0LTIge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMWVtOyB9XG4gICAgICAuaG9tZSAuc3RuLWluZm8gLmNvbC0yLWN0ciAuY3RyLWFib3V0IC5kZXNjcmlwdGlvbi1jb2wtMiAuY3RyLWNvbC0yIC5jb2wtMi10eHQgLnR4dC0xIHtcbiAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxZW07XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxZW07IH1cbiAgICAgIC5ob21lIC5zdG4taW5mbyAuY29sLTItY3RyIC5jdHItYWJvdXQgLmRlc2NyaXB0aW9uLWNvbC0yIC5jdHItY29sLTIgLmNvbC0yLXR4dCAudHh0LTIge1xuICAgICAgICBmb250LXNpemU6IDFlbTsgfVxuICAgICAgLmhvbWUgLnN0bi1pbmZvIC5jb2wtMi1jdHIgLmN0ci1hYm91dCAuZGVzY3JpcHRpb24tY29sLTIgLmFydC1saW5rIHtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgZm9udC1zaXplOiAuODBlbTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTkyZjtcbiAgICAgICAgd2lkdGg6IDVlbTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBwYWRkaW5nOiAuNzVlbSAxZW07XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdDYWJpbicsIHNhbnMtc2VyaWY7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgICAgICAuaG9tZSAuc3RuLWluZm8gLmNvbC0yLWN0ciAuY3RyLWFib3V0IC5kZXNjcmlwdGlvbi1jb2wtMiAuYXJ0LWxpbms6OmJlZm9yZSB7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHotaW5kZXg6IC0xO1xuICAgICAgICAgIHRvcDogMXB4O1xuICAgICAgICAgIHJpZ2h0OiAtMnB4O1xuICAgICAgICAgIHdpZHRoOiA0Ljg1ZW07XG4gICAgICAgICAgaGVpZ2h0OiAxLjJlbTtcbiAgICAgICAgICBwYWRkaW5nOiAuNzVlbSAwO1xuICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjN2JlYmU7IH1cbiAgICAuaG9tZSAuc3RuLWluZm8gLmNvbC0yLWN0ciAuY3RyLW5ld3Mge1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAgIC5ob21lIC5zdG4taW5mbyAuY29sLTItY3RyIC5jdHItbmV3cyAuY29sLXRpdHJlIHtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgY29sb3I6ICM4NWNjZDk7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgbWFyZ2luOiAxZW0gMDtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdDYWJpbicsIHNhbnMtc2VyaWY7IH1cbiAgICAgIC5ob21lIC5zdG4taW5mbyAuY29sLTItY3RyIC5jdHItbmV3cyAuZGVzY3JpcHRpb24tcm93LTIgLmN0ci1jb2wtZGF0ZS0xIC5jdHItZGF0ZS1ldmVudC0xIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtOyB9XG4gICAgICAgIC5ob21lIC5zdG4taW5mbyAuY29sLTItY3RyIC5jdHItbmV3cyAuZGVzY3JpcHRpb24tcm93LTIgLmN0ci1jb2wtZGF0ZS0xIC5jdHItZGF0ZS1ldmVudC0xIC5jdHItZGF0ZSB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE2NDQ1YztcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICB3aWR0aDogNjBweDtcbiAgICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxZW07XG4gICAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gICAgICAgICAgLmhvbWUgLnN0bi1pbmZvIC5jb2wtMi1jdHIgLmN0ci1uZXdzIC5kZXNjcmlwdGlvbi1yb3ctMiAuY3RyLWNvbC1kYXRlLTEgLmN0ci1kYXRlLWV2ZW50LTEgLmN0ci1kYXRlIC5pbmZvLWpvdXIge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogLjVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxLjVlbTsgfVxuICAgICAgICAgIC5ob21lIC5zdG4taW5mbyAuY29sLTItY3RyIC5jdHItbmV3cyAuZGVzY3JpcHRpb24tcm93LTIgLmN0ci1jb2wtZGF0ZS0xIC5jdHItZGF0ZS1ldmVudC0xIC5jdHItZGF0ZSAuaW5mby1tb2lzIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjg1ZW07IH1cbiAgICAgICAgLmhvbWUgLnN0bi1pbmZvIC5jb2wtMi1jdHIgLmN0ci1uZXdzIC5kZXNjcmlwdGlvbi1yb3ctMiAuY3RyLWNvbC1kYXRlLTEgLmN0ci1kYXRlLWV2ZW50LTEgLmN0ci10eHQtZXZlbnQgLmN0ci1kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gICAgICAgICAgLmhvbWUgLnN0bi1pbmZvIC5jb2wtMi1jdHIgLmN0ci1uZXdzIC5kZXNjcmlwdGlvbi1yb3ctMiAuY3RyLWNvbC1kYXRlLTEgLmN0ci1kYXRlLWV2ZW50LTEgLmN0ci10eHQtZXZlbnQgLmN0ci1kZXNjcmlwdGlvbiAuZGF0ZS1vIHtcbiAgICAgICAgICAgIGNvbG9yOiAjZmY1OTJmOyB9XG4gICAgICAuaG9tZSAuc3RuLWluZm8gLmNvbC0yLWN0ciAuY3RyLW5ld3MgLmRlc2NyaXB0aW9uLXJvdy0yIC5jdHItY29sLWRhdGUtMSAuY3RyLWRlc2NyaXB0aW9uLTIgLmN0ci10eHQge1xuICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDFlbTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDFlbTsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuaG9tZSAuc3RuLWluZm8gLmNvbC0yLWN0ciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93OyB9XG4gICAgLmhvbWUgLnN0bi1pbmZvIC5jb2wtMi1jdHIgLmN0ci1hYm91dCB7XG4gICAgICB3aWR0aDogNjAlOyB9XG4gICAgICAuaG9tZSAuc3RuLWluZm8gLmNvbC0yLWN0ciAuY3RyLWFib3V0IC5kZXNjcmlwdGlvbi1jb2wtMiAuY3RyLWNvbC0xIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsgfVxuICAgICAgICAuaG9tZSAuc3RuLWluZm8gLmNvbC0yLWN0ciAuY3RyLWFib3V0IC5kZXNjcmlwdGlvbi1jb2wtMiAuY3RyLWNvbC0xIC5jdHItaW1nIHtcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgd2lkdGg6IDgwJTtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDFlbTsgfVxuICAgIC5ob21lIC5zdG4taW5mbyAuY29sLTItY3RyIC5jdHItbmV3cyB7XG4gICAgICB3aWR0aDogNDAlOyB9IH1cblxuLnN0bi1tZXRob2RzIHtcbiAgbWFyZ2luOiAwOyB9XG4gIC5zdG4tbWV0aG9kcyAudGl0cmUtaW50cm8ge1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgZm9udC1mYW1pbHk6ICdDYWJpbicsIHNhbnMtc2VyaWY7IH1cbiAgLnN0bi1tZXRob2RzIC5jdHItY29sLTMge1xuICAgIG1hcmdpbjogMmVtIGF1dG87XG4gICAgcGFkZGluZzogMWVtIDFlbTsgfVxuICAgIC5zdG4tbWV0aG9kcyAuY3RyLWNvbC0zIC5jdHItbWV0aG9kcyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuICAgICAgLnN0bi1tZXRob2RzIC5jdHItY29sLTMgLmN0ci1tZXRob2RzIC5tZXRob2RzLWxpc3Qge1xuICAgICAgICBtYXJnaW46IDFlbSAwO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBkaXNwbGF5OiBmbGV4OyB9XG4gICAgICAgIC5zdG4tbWV0aG9kcyAuY3RyLWNvbC0zIC5jdHItbWV0aG9kcyAubWV0aG9kcy1saXN0IC50eHQtbWV0aG9kIHtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAuNWVtO1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjVlbTsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuc3RuLW1ldGhvZHMge1xuICAgIG1hcmdpbjogNWVtIDA7IH1cbiAgICAuc3RuLW1ldGhvZHMgLnRpdHJlLWludHJvIHtcbiAgICAgIGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmOyB9XG4gICAgLnN0bi1tZXRob2RzIC5jdHItY29sLTMge1xuICAgICAgcGFkZGluZzogMCAxZW07IH1cbiAgICAgIC5zdG4tbWV0aG9kcyAuY3RyLWNvbC0zIC5jdHItbWV0aG9kcyB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7IH1cbiAgICAgICAgLnN0bi1tZXRob2RzIC5jdHItY29sLTMgLmN0ci1tZXRob2RzIC5tZXRob2RzLWxpc3Qge1xuICAgICAgICAgIHdpZHRoOiAzMy4zMzMzMyU7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMmVtOyB9XG4gICAgICAgICAgLnN0bi1tZXRob2RzIC5jdHItY29sLTMgLmN0ci1tZXRob2RzIC5tZXRob2RzLWxpc3Q6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICAgICAgbWFyZ2luOiAxZW0gMWVtOyB9XG4gICAgICAgICAgLnN0bi1tZXRob2RzIC5jdHItY29sLTMgLmN0ci1tZXRob2RzIC5tZXRob2RzLWxpc3QgLnR4dC1tZXRob2Qge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDFlbTsgfSB9XG5cbi5jdHItbGlzdC1zZXJ2aWNlcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBhZGRpbmc6IDEuNWVtIDA7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgLmN0ci1saXN0LXNlcnZpY2VzIC5zZXJ2aWNlLWxpc3Qge1xuICAgIG1hcmdpbjogMWVtIDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgICAuY3RyLWxpc3Qtc2VydmljZXMgLnNlcnZpY2UtbGlzdCAuY29sLXRpdHJlIHtcbiAgICAgIGNvbG9yOiAjMTY0NDVjO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICAgIGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmOyB9XG4gICAgICAuY3RyLWxpc3Qtc2VydmljZXMgLnNlcnZpY2UtbGlzdCAuY29sLXRpdHJlIC5mYS1maWxlLXRleHQtbyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IC4yZW07IH1cbiAgICAgIC5jdHItbGlzdC1zZXJ2aWNlcyAuc2VydmljZS1saXN0IC5jb2wtdGl0cmUgLmZhLXVzZXIge1xuICAgICAgICBmb250LXNpemU6IDJlbTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAuMmVtOyB9XG4gICAgICAuY3RyLWxpc3Qtc2VydmljZXMgLnNlcnZpY2UtbGlzdCAuY29sLXRpdHJlIC5mYS1iYXItY2hhcnQge1xuICAgICAgICBmb250LXNpemU6IDJlbTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAuMmVtOyB9XG4gICAgICAuY3RyLWxpc3Qtc2VydmljZXMgLnNlcnZpY2UtbGlzdCAuY29sLXRpdHJlIC5mYS1jb21tZW50IHtcbiAgICAgICAgZm9udC1zaXplOiAyZW07XG4gICAgICAgIG1hcmdpbi1yaWdodDogLjJlbTsgfVxuICAgIC5jdHItbGlzdC1zZXJ2aWNlcyAuc2VydmljZS1saXN0IC5jb2wtdGV4dCB7XG4gICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgIHBhZGRpbmc6IDFlbSAwOyB9XG4gICAgLmN0ci1saXN0LXNlcnZpY2VzIC5zZXJ2aWNlLWxpc3QgLmFydC1saW5rIHtcbiAgICAgIHBvc2l0aW9uOiBpbml0aWFsO1xuICAgICAgZm9udC1zaXplOiAuODBlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICB3aWR0aDogNWVtO1xuICAgICAgcGFkZGluZzogLjc1ZW0gMDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjU5MmY7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgIC5jdHItbGlzdC1zZXJ2aWNlcyAuc2VydmljZS1saXN0IC5hcnQtbGluazo6YmVmb3JlIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB6LWluZGV4OiAtMTtcbiAgICAgICAgdG9wOiAxLjJweDtcbiAgICAgICAgcmlnaHQ6IC0xLjJweDtcbiAgICAgICAgd2lkdGg6IDVlbTtcbiAgICAgICAgaGVpZ2h0OiAxLjFlbTtcbiAgICAgICAgcGFkZGluZzogLjc1ZW0gMDtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjN2JlYmU7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmN0ci1saXN0LXNlcnZpY2VzIHtcbiAgICBwYWRkaW5nOiAxLjVlbSAwO1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwgMWZyKTtcbiAgICBncmlkLWdhcDogMWVtOyB9XG4gICAgLmN0ci1saXN0LXNlcnZpY2VzIC5zZXJ2aWNlLWxpc3Qge1xuICAgICAgbWFyZ2luOiAxZW0gMDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgICAgIC5jdHItbGlzdC1zZXJ2aWNlcyAuc2VydmljZS1saXN0IC5jb2wtdGl0cmUge1xuICAgICAgICBjb2xvcjogIzE2NDQ1YztcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjsgfVxuICAgICAgICAuY3RyLWxpc3Qtc2VydmljZXMgLnNlcnZpY2UtbGlzdCAuY29sLXRpdHJlIC5mYS1maWxlLXRleHQtbyB7XG4gICAgICAgICAgZm9udC1zaXplOiAyZW07XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAuMmVtOyB9XG4gICAgICAgIC5jdHItbGlzdC1zZXJ2aWNlcyAuc2VydmljZS1saXN0IC5jb2wtdGl0cmUgLmZhLXVzZXIge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogLjJlbTsgfVxuICAgICAgICAuY3RyLWxpc3Qtc2VydmljZXMgLnNlcnZpY2UtbGlzdCAuY29sLXRpdHJlIC5mYS1iYXItY2hhcnQge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogLjJlbTsgfVxuICAgICAgICAuY3RyLWxpc3Qtc2VydmljZXMgLnNlcnZpY2UtbGlzdCAuY29sLXRpdHJlIC5mYS1jb21tZW50IHtcbiAgICAgICAgICBmb250LXNpemU6IDJlbTtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IC4yZW07IH1cbiAgICAgIC5jdHItbGlzdC1zZXJ2aWNlcyAuc2VydmljZS1saXN0IC5jb2wtdGV4dCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgICBwYWRkaW5nOiAxZW0gMDsgfVxuICAgICAgLmN0ci1saXN0LXNlcnZpY2VzIC5zZXJ2aWNlLWxpc3QgLmFydC1saW5rIHtcbiAgICAgICAgZm9udC1zaXplOiAuODBlbTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgd2lkdGg6IDVlbTtcbiAgICAgICAgcGFkZGluZzogLjc1ZW0gMDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjU5MmY7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH0gfVxuXG4uc3RuLXNlcnZpY2UtaW5mbyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlN2VkZWQ7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogNmVtIDFlbTtcbiAgZGlzcGxheTogZmxleDsgfVxuICAuc3RuLXNlcnZpY2UtaW5mbyAuc2VydmljZS1saXN0IHtcbiAgICBtYXJnaW46IDFlbSAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMzMuMzMzMzMlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuICAgIC5zdG4tc2VydmljZS1pbmZvIC5zZXJ2aWNlLWxpc3Q6bnRoLWNoaWxkKDIpIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmctdG9wOiAxZW07IH1cbiAgICAuc3RuLXNlcnZpY2UtaW5mbyAuc2VydmljZS1saXN0Om50aC1jaGlsZCgzKSB7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgIHBhZGRpbmctdG9wOiAxZW07IH1cbiAgICAuc3RuLXNlcnZpY2UtaW5mbyAuc2VydmljZS1saXN0IC5jb2wtdGl0cmUge1xuICAgICAgY29sb3I6ICM4NWNjZDk7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmO1xuICAgICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxZW07IH1cbiAgICAuc3RuLXNlcnZpY2UtaW5mbyAuc2VydmljZS1saXN0IC5jdHItbGlzdCAudHh0LWxpc3Qge1xuICAgICAgY29sb3I6ICMxNjQ0NWM7IH1cbiAgICAgIC5zdG4tc2VydmljZS1pbmZvIC5zZXJ2aWNlLWxpc3QgLmN0ci1saXN0IC50eHQtbGlzdDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IC41ZW07IH1cbiAgICAgIC5zdG4tc2VydmljZS1pbmZvIC5zZXJ2aWNlLWxpc3QgLmN0ci1saXN0IC50eHQtbGlzdCAuZmEtbG9uZy1hcnJvdy1yaWdodCB7XG4gICAgICAgIGNvbG9yOiAjZmY1OTJmO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IC41ZW07IH1cbiAgICAuc3RuLXNlcnZpY2UtaW5mbyAuc2VydmljZS1saXN0IC5jdHItZmFxIC5jdHItZGV0YWlscyB7XG4gICAgICBkaXNwbGF5OiBmbGV4OyB9XG4gICAgICAuc3RuLXNlcnZpY2UtaW5mbyAuc2VydmljZS1saXN0IC5jdHItZmFxIC5jdHItZGV0YWlsczpmaXJzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTsgfVxuICAgICAgLnN0bi1zZXJ2aWNlLWluZm8gLnNlcnZpY2UtbGlzdCAuY3RyLWZhcSAuY3RyLWRldGFpbHMgLnJlcC1xIHtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDFlbTsgfVxuICAgIC5zdG4tc2VydmljZS1pbmZvIC5zZXJ2aWNlLWxpc3QgLmN0ci1kZXNjcmlwdGlvbiB7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgZm9udC1zaXplOiAxLjFlbTsgfVxuICAgICAgLnN0bi1zZXJ2aWNlLWluZm8gLnNlcnZpY2UtbGlzdCAuY3RyLWRlc2NyaXB0aW9uOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogLjVlbTsgfVxuICAuc3RuLXNlcnZpY2UtaW5mbyAuY3RyLWxpc3Qtc2VydmljZXMge1xuICAgIG1hcmdpbjogMCBhdXRvOyB9XG4gICAgLnN0bi1zZXJ2aWNlLWluZm8gLmN0ci1saXN0LXNlcnZpY2VzIC5zZXJ2aWNlLWxpc3Qge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW46IDA7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnN0bi1zZXJ2aWNlLWluZm8gLmN0ci1saXN0LXNlcnZpY2VzIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpOyB9XG4gICAgLnN0bi1zZXJ2aWNlLWluZm8gLmN0ci1saXN0LXNlcnZpY2VzIC5zZXJ2aWNlLWxpc3Qge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW46IDA7IH1cbiAgICAgIC5zdG4tc2VydmljZS1pbmZvIC5jdHItbGlzdC1zZXJ2aWNlcyAuc2VydmljZS1saXN0Om50aC1jaGlsZCgyKSB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAwZW07IH1cbiAgICAgIC5zdG4tc2VydmljZS1pbmZvIC5jdHItbGlzdC1zZXJ2aWNlcyAuc2VydmljZS1saXN0Om50aC1jaGlsZCgzKSB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAwZW07IH1cbiAgICAgIC5zdG4tc2VydmljZS1pbmZvIC5jdHItbGlzdC1zZXJ2aWNlcyAuc2VydmljZS1saXN0IC5jb2wtdGl0cmUge1xuICAgICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjsgfSB9XG4iLCIvL2ZvbnQtZmFtaWx5OidGamFsbGEgT25lJywgc2Fucy1zZXJpZjtcclxuXHJcbi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvIFxyXG4gICB2Mi4wIHwgMjAxMTAxMjZcclxuICAgTGljZW5zZTogbm9uZSAocHVibGljIGRvbWFpbilcclxuKi9cclxuXHJcbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcclxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxyXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXHJcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcclxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcclxuYiwgdSwgaSwgY2VudGVyLFxyXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxyXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcclxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXHJcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLCBcclxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBcclxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXHJcbnRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYm9yZGVyOiAwO1xyXG4gIGZvbnQtc2l6ZTogMTAwJTtcclxuICAvL2ZvbnQ6IGluaGVyaXQ7XHJcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cclxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgXHJcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuYm9keSB7XHJcbiAgbGluZS1oZWlnaHQ6IDE7XHJcbn1cclxuXHJcbm9sLCB1bCB7XHJcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICBcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBmb250LXNpemU6IDEwMCU7XHJcbiAgICBmb250OiBpbmhlcml0O1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcblxyXG5ibG9ja3F1b3RlLCBxIHtcclxuICBxdW90ZXM6IG5vbmU7XHJcbn1cclxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsXHJcbnE6YmVmb3JlLCBxOmFmdGVyIHtcclxuICBjb250ZW50OiAnJztcclxuICBjb250ZW50OiBub25lO1xyXG59XHJcbnRhYmxlIHtcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gIGJvcmRlci1zcGFjaW5nOiAwO1xyXG59IiwiLypcbiAqIGpRdWVyeSBGbGV4U2xpZGVyIHYyLjcuMVxuICogaHR0cDovL3d3dy53b290aGVtZXMuY29tL2ZsZXhzbGlkZXIvXG4gKlxuICogQ29weXJpZ2h0IDIwMTIgV29vVGhlbWVzXG4gKiBGcmVlIHRvIHVzZSB1bmRlciB0aGUgR1BMdjIgYW5kIGxhdGVyIGxpY2Vuc2UuXG4gKiBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvZ3BsLTIuMC5odG1sXG4gKlxuICogQ29udHJpYnV0aW5nIGF1dGhvcjogVHlsZXIgU21pdGggKEBtYm11ZmZmaW4pXG4gKlxuICovXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogRk9OVC1GQUNFXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdmbGV4c2xpZGVyLWljb24nO1xuICBzcmM6IHVybCgnZm9udHMvZmxleHNsaWRlci1pY29uLmVvdCcpO1xuICBzcmM6IHVybCgnZm9udHMvZmxleHNsaWRlci1pY29uLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksIHVybCgnZm9udHMvZmxleHNsaWRlci1pY29uLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSwgdXJsKCdmb250cy9mbGV4c2xpZGVyLWljb24udHRmJykgZm9ybWF0KCd0cnVldHlwZScpLCB1cmwoJ2ZvbnRzL2ZsZXhzbGlkZXItaWNvbi5zdmcjZmxleHNsaWRlci1pY29uJykgZm9ybWF0KCdzdmcnKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIFJFU0VUU1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuLmZsZXgtY29udGFpbmVyIGE6aG92ZXIsXG4uZmxleC1zbGlkZXIgYTpob3ZlciB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG4uc2xpZGVzLFxuLnNsaWRlcyA+IGxpLFxuLmZsZXgtY29udHJvbC1uYXYsXG4uZmxleC1kaXJlY3Rpb24tbmF2IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuLmZsZXgtcGF1c2VwbGF5IHNwYW4ge1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCQVNFIFNUWUxFU1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuLmZsZXhzbGlkZXIge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG4uZmxleHNsaWRlciAuc2xpZGVzID4gbGkge1xuICBkaXNwbGF5OiBub25lO1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbn1cbi5mbGV4c2xpZGVyIC5zbGlkZXMgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLmZsZXhzbGlkZXIgLnNsaWRlczphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXFwwMDIwXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjbGVhcjogYm90aDtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBsaW5lLWhlaWdodDogMDtcbiAgaGVpZ2h0OiAwO1xufVxuaHRtbFt4bWxuc10gLmZsZXhzbGlkZXIgLnNsaWRlcyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuKiBodG1sIC5mbGV4c2xpZGVyIC5zbGlkZXMge1xuICBoZWlnaHQ6IDElO1xufVxuLm5vLWpzIC5mbGV4c2xpZGVyIC5zbGlkZXMgPiBsaTpmaXJzdC1jaGlsZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIERFRkFVTFQgVEhFTUVcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbi5mbGV4c2xpZGVyIHtcbiAgbWFyZ2luOiAwIDAgNjBweDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgYm9yZGVyOiA0cHggc29saWQgI2ZmZjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6b29tOiAxO1xuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDRweDtcbiAgLW1vei1ib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAnJyAwIDFweCA0cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAtbW96LWJveC1zaGFkb3c6ICcnIDAgMXB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIC1vLWJveC1zaGFkb3c6ICcnIDAgMXB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIGJveC1zaGFkb3c6ICcnIDAgMXB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMik7XG59XG4uZmxleHNsaWRlciAuc2xpZGVzIHtcbiAgem9vbTogMTtcbn1cbi5mbGV4c2xpZGVyIC5zbGlkZXMgaW1nIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xufVxuLmZsZXgtdmlld3BvcnQge1xuICBtYXgtaGVpZ2h0OiAyMDAwcHg7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDFzIGVhc2U7XG4gIC1tb3otdHJhbnNpdGlvbjogYWxsIDFzIGVhc2U7XG4gIC1tcy10cmFuc2l0aW9uOiBhbGwgMXMgZWFzZTtcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDFzIGVhc2U7XG4gIHRyYW5zaXRpb246IGFsbCAxcyBlYXNlO1xufVxuLmxvYWRpbmcgLmZsZXgtdmlld3BvcnQge1xuICBtYXgtaGVpZ2h0OiAzMDBweDtcbn1cbkAtbW96LWRvY3VtZW50IHVybC1wcmVmaXgoKSB7XG4gIC5sb2FkaW5nIC5mbGV4LXZpZXdwb3J0IHtcbiAgICBtYXgtaGVpZ2h0OiBub25lO1xuICB9XG59XG4uY2Fyb3VzZWwgbGkge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn1cbi5mbGV4LWRpcmVjdGlvbi1uYXYge1xuICAqaGVpZ2h0OiAwO1xufVxuLmZsZXgtZGlyZWN0aW9uLW5hdiBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgbWFyZ2luOiAtMjBweCAwIDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHotaW5kZXg6IDEwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBvcGFjaXR5OiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOCk7XG4gIHRleHQtc2hhZG93OiAxcHggMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICAtbXMtdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gIC1vLXRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbn1cbi5mbGV4LWRpcmVjdGlvbi1uYXYgYTpiZWZvcmUge1xuICBmb250LWZhbWlseTogXCJmbGV4c2xpZGVyLWljb25cIjtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGNvbnRlbnQ6ICdcXGYwMDEnO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgpO1xuICB0ZXh0LXNoYWRvdzogMXB4IDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcbn1cbi5mbGV4LWRpcmVjdGlvbi1uYXYgYS5mbGV4LW5leHQ6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZjAwMic7XG59XG4uZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LXByZXYge1xuICBsZWZ0OiAtNTBweDtcbn1cbi5mbGV4LWRpcmVjdGlvbi1uYXYgLmZsZXgtbmV4dCB7XG4gIHJpZ2h0OiAtNTBweDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG4uZmxleHNsaWRlcjpob3ZlciAuZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LXByZXYge1xuICBvcGFjaXR5OiAwLjc7XG4gIGxlZnQ6IDEwcHg7XG59XG4uZmxleHNsaWRlcjpob3ZlciAuZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LXByZXY6aG92ZXIge1xuICBvcGFjaXR5OiAxO1xufVxuLmZsZXhzbGlkZXI6aG92ZXIgLmZsZXgtZGlyZWN0aW9uLW5hdiAuZmxleC1uZXh0IHtcbiAgb3BhY2l0eTogMC43O1xuICByaWdodDogMTBweDtcbn1cbi5mbGV4c2xpZGVyOmhvdmVyIC5mbGV4LWRpcmVjdGlvbi1uYXYgLmZsZXgtbmV4dDpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG4uZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LWRpc2FibGVkIHtcbiAgb3BhY2l0eTogMCFpbXBvcnRhbnQ7XG4gIGZpbHRlcjogYWxwaGEob3BhY2l0eT0wKTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICB6LWluZGV4OiAtMTtcbn1cbi5mbGV4LXBhdXNlcGxheSBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiA1cHg7XG4gIGxlZnQ6IDEwcHg7XG4gIG9wYWNpdHk6IDAuODtcbiAgei1pbmRleDogMTA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6ICMwMDA7XG59XG4uZmxleC1wYXVzZXBsYXkgYTpiZWZvcmUge1xuICBmb250LWZhbWlseTogXCJmbGV4c2xpZGVyLWljb25cIjtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGNvbnRlbnQ6ICdcXGYwMDQnO1xufVxuLmZsZXgtcGF1c2VwbGF5IGE6aG92ZXIge1xuICBvcGFjaXR5OiAxO1xufVxuLmZsZXgtcGF1c2VwbGF5IGEuZmxleC1wbGF5OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGYwMDMnO1xufVxuLmZsZXgtY29udHJvbC1uYXYge1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IC00MHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uZmxleC1jb250cm9sLW5hdiBsaSB7XG4gIG1hcmdpbjogMCA2cHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgem9vbTogMTtcbiAgKmRpc3BsYXk6IGlubGluZTtcbn1cbi5mbGV4LWNvbnRyb2wtcGFnaW5nIGxpIGEge1xuICB3aWR0aDogMTFweDtcbiAgaGVpZ2h0OiAxMXB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgYmFja2dyb3VuZDogIzY2NjtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRleHQtaW5kZW50OiAtOTk5OXB4O1xuICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMCAzcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDAgMCAzcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAtby1ib3gtc2hhZG93OiBpbnNldCAwIDAgM3B4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDNweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMjBweDtcbiAgLW1vei1ib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xufVxuLmZsZXgtY29udHJvbC1wYWdpbmcgbGkgYTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC43KTtcbn1cbi5mbGV4LWNvbnRyb2wtcGFnaW5nIGxpIGEuZmxleC1hY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuOSk7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cbi5mbGV4LWNvbnRyb2wtdGh1bWJzIHtcbiAgbWFyZ2luOiA1cHggMCAwO1xuICBwb3NpdGlvbjogc3RhdGljO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLmZsZXgtY29udHJvbC10aHVtYnMgbGkge1xuICB3aWR0aDogMjUlO1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luOiAwO1xufVxuLmZsZXgtY29udHJvbC10aHVtYnMgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG4gIG9wYWNpdHk6IC43O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDFzIGVhc2U7XG4gIC1tb3otdHJhbnNpdGlvbjogYWxsIDFzIGVhc2U7XG4gIC1tcy10cmFuc2l0aW9uOiBhbGwgMXMgZWFzZTtcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDFzIGVhc2U7XG4gIHRyYW5zaXRpb246IGFsbCAxcyBlYXNlO1xufVxuLmZsZXgtY29udHJvbC10aHVtYnMgaW1nOmhvdmVyIHtcbiAgb3BhY2l0eTogMTtcbn1cbi5mbGV4LWNvbnRyb2wtdGh1bWJzIC5mbGV4LWFjdGl2ZSB7XG4gIG9wYWNpdHk6IDE7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBSRVNQT05TSVZFXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4NjBweCkge1xuICAuZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LXByZXYge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgbGVmdDogMTBweDtcbiAgfVxuICAuZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LW5leHQge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgcmlnaHQ6IDEwcHg7XG4gIH1cbn1cbiIsIi8qIFBBR0UgOiBIRUFERVIgTU9CSUxFICovXHJcbi5oZHIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGdyaXMtbW95ZW47XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICBcclxuICAgIC5oZHItbmF2LWxvZ28ge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5oZHItY3RyLWxvZ297XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG5cclxuICAgIC5oZHItbmF2IHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgei1pbmRleDogMTAwMDA7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmxldS1jbGFpcjtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgcGFkZGluZzogMWVtO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcyBlYXNlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5oZHItbmF2LWJ0biB7XHJcbiAgICAgICAgbGVmdDogMTAwJTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmxldS1jbGFpcjtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgZGl2IHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDUlO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmxhbmM7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgXHJcbiAgICAgICAgICAgICY6bnRoLWxhc3Qtb2YtdHlwZSgxKSB7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDM2JTtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgJjpudGgtbGFzdC1vZi10eXBlKDIpIHtcclxuICAgICAgICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICAgICAmOm50aC1sYXN0LW9mLXR5cGUoMykge1xyXG4gICAgICAgICAgICAgICAgdG9wOiA2NCU7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLmhkci1uYXYtdG9nZ2xlLWNiIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgbGVmdDogLTEwMDAwcHg7XHJcbiAgICBcclxuICAgICAgICAmICsgLmhkci1uYXYge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICY6Y2hlY2tlZCArIC5oZHItbmF2IHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5oZHItbmF2LWxpbmtzLWxpc3Qge1xyXG4gICAgICAgIEBleHRlbmQgJWNvbnRhaW5lci1teHc7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiB1bnNldDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmhkci1uYXYtY3RyLWxpbmsge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAxLjVlbTtcclxuICAgICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgICBcclxuICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcgJztcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdmVybWlsbG9uO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIC5oZHItbmF2LWxpbmsge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAmOmhvdmVyOmJlZm9yZSB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDAgMDtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmLnNlbGVjdCB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR2ZXJtaWxsb247XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgIC5oZHItbmF2LWxpbmsge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5oZHItbmF2LWxpbmsge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBjb2xvcjogJGJsZXUtZm9uY2U7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBmb250LXNpemU6IC44MGVtO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlO1xyXG4gICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICB9XHJcblxyXG4gICAgLmhpZGRlbntcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBcclxuICAgIC5oaWRkZW57XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWJmMGYwOGE7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBwYWRkaW5nOiAxZW0gMWVtO1xyXG4gICAgfVxyXG5cclxuICAgIC5oaWRkZW4gbGkgYSB7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIGNvbG9yOiAjMTY0NDVjO1xyXG4gICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgbGk6aG92ZXIgYSArIC5oaWRkZW4sIC5oaWRkZW46aG92ZXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICAgICAgd2lkdGg6IDdlbTtcclxuICAgICAgICB0b3A6IDM4cHg7XHJcbiAgICAgICAgbGVmdDogMTc0JTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAuaGlkZGVuIGxpIHtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogLjVlbTtcclxuICAgIH1cclxufVxyXG5cclxuLyogUEFHRSA6IEhFQURFUiAqL1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkdGFibGV0dGUtcG9ydHJhaXQpIHtcclxuICAgIC5oZHIge1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDAgMCAwO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC5oZHItbmF2IHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsZXUtY2xhaXI7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbSAwO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuaGRyLWN0ci1sb2dve1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgLmhkci1uYXYtbG9nbyB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbiAgICAgICAgICAgIHRvcDogYXV0bztcclxuICAgICAgICAgICAgbGVmdDogYXV0bztcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCk7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMmVtIGF1dG8gMmVtO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuaGRyLW5hdi1saW5rcy1saXN0IHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuaGRyLW5hdi1jdHItbGluayB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAuc2VsZWN0IHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR2ZXJtaWxsb247XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuaGRyLW5hdi1saW5rIHtcclxuICAgICAgICAgICAgY29sb3I6ICRibGV1LWZvbmNlO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjgwZW07XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuaGlkZGVue1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWJmMGYwOGE7XHJcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbSAxZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuaGlkZGVuIGxpIGEge1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjMTY0NDVjO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgbGk6aG92ZXIgYSArIC5oaWRkZW4sIC5oaWRkZW46aG92ZXIge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICAgICAgICB3aWR0aDogN2VtO1xyXG4gICAgICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgICAgIHJpZ2h0OiA1MCU7XHJcbiAgICAgICAgICAgIHRvcDogODdweDtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5oaWRkZW4gbGkge1xyXG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogLjVlbTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAuaGRyLW5hdi10b2dnbGUtY2Ige1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGxlZnQ6IC0xMDAwMHB4O1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAmICsgLmhkci1uYXYge1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBub25lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgICY6Y2hlY2tlZCArIC5oZHItbmF2IHtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuaGRyLW5hdi1idG4ge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi8vIFN0eWxlcyBwYXIgZMOpZmF1dCwgbW9iaWxlIGZpcnN0XG4uZnRyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmxldS1jbGFpcjtcbiAgICBwYWRkaW5nOiAxZW07XG5cbiAgICAuZnRyLW5hdiB7XG4gICAgICAgIEBleHRlbmQgJWNvbnRhaW5lci1teHc7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgIFxuICAgICAgICAuZnRyLW5hdi1saW5rcy1saXN0e1xuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDFmciAxZnI7XG4gICAgICAgICAgICBncmlkLXJvdy1nYXA6IDFlbTtcbiAgICBcbiAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAudGl0cmUtc2l0ZXtcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsZXUtZm9uY2U7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogLjAxZW07XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdDYWJpbicsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC5zb3VzLXRpdHJlLXNpdGV7XG4gICAgICAgICAgICAgICAgY29sb3I6ICR2ZXJtaWxsb247XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogLjAxZW07XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdDYWJpbicsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGZvcm0ge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpbnB1dCB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMTBweCAwO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICAgICAgICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAwIG5vbmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMCBub25lO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDEwcHggMDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMCAxMnB4O1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsZXUtZm9uY2U7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICY6bnRoLWNoaWxkKDMpIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAucnMtbGlzdCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICAgICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsZXUtZm9uY2U7XG5cbiAgICAgICAgICAgICAgICAuY3RyLXJzIHtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgICAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxZW07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR0YWJsZXR0ZS1wb3J0cmFpdCkge1xuICAgIC5mdHIge1xuICAgICAgICAuZnRyLW5hdiB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5mdHItbmF2LWxpbmtzLWxpc3R7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICAgICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogdW5zZXQ7XG4gICAgICAgICAgICAgICAgZ3JpZC1yb3ctZ2FwOiB1bnNldDtcbiAgICAgICAgICAgICAgICBncmlkLWNvbHVtbi1nYXA6IDFlbTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAudGl0cmUtc2l0ZXtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRibGV1LWZvbmNlO1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLnNvdXMtdGl0cmUtc2l0ZXtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR2ZXJtaWxsb247XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogLjAxZW07XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICBmb3Jte1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMi41ZW07XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBidXR0b24ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsZXUtZm9uY2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOm50aC1jaGlsZCgzKSB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLnJzLWxpc3Qge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGJsZXUtZm9uY2U7XG4gICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAuY3RyLXJzIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgICY6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxZW07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRsYXB0b3ApIHt9IiwiLyogUEFHRSA6IEhPTUUgKi9cclxuLmhvbWUge1xyXG4gICBcclxuICAgIC5zdG4tYXJ0cyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZWRlZDtcclxuICAgICAgICBwYWRkaW5nOiAzZW0gMDtcclxuICAgICAgICBcclxuICAgICAgICAuZmxleHNsaWRlciB7XHJcbiAgICAgICAgICAgIEBleHRlbmQgJWNvbnRhaW5lci1teHc7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgIG1hcmdpbjogNDBweCBhdXRvIC0yMHB4O1xyXG4gICAgICAgICAgICBib3JkZXI6IDAgbm9uZTtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAuc2xpZGVzIGltZyB7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IHVuc2V0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgLmZsZXgtZGlyZWN0aW9uLW5hdiBhIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibGV1LWZvbmNlO1xyXG4gICAgICAgICAgICAgICAgdG9wOiAtMzBweDtcclxuICAgICAgICAgICAgICAgIHRleHQtc2hhZG93OiBub25lO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgLmZsZXgtZGlyZWN0aW9uLW5hdiBhOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLmZsZXgtZGlyZWN0aW9uLW5hdiBhLmZsZXgtbmV4dDpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC5mbGV4LWRpcmVjdGlvbi1uYXYgLmZsZXgtcHJldiB7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiBjYWxjKDEwMCUgLSAoNDBweCAqIDIpIC0gMTVweCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC5mbGV4LWRpcmVjdGlvbi1uYXYgLmZsZXgtbmV4dCB7XHJcbiAgICAgICAgICAgICAgICByaWdodDogNXB4O1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC5mbGV4c2xpZGVyOmhvdmVyIC5mbGV4LWRpcmVjdGlvbi1uYXYgLmZsZXgtcHJldiB7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjc7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiBjYWxjKDEwMCUgLSAoNDBweCAqIDIpIC0gMTVweCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC5mbGV4c2xpZGVyOmhvdmVyIC5mbGV4LWRpcmVjdGlvbi1uYXYgLmZsZXgtcHJldjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAuZmxleHNsaWRlcjpob3ZlciAuZmxleC1kaXJlY3Rpb24tbmF2IC5mbGV4LW5leHQge1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5mbGV4c2xpZGVyOmhvdmVyIC5mbGV4LWRpcmVjdGlvbi1uYXYgLmZsZXgtbmV4dDpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgLmZsZXgtZGlyZWN0aW9uLW5hdiAuZmxleC1uZXh0IHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC5mbGV4LWRpcmVjdGlvbi1uYXYgLmZsZXgtcHJldiB7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiBjYWxjKDEwMCUgLSAoNDBweCAqIDIpIC0gMTVweCk7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgLmZsZXgtZGlyZWN0aW9uLW5hdiAuZmxleC1kaXNhYmxlZCB7XHJcbiAgICAgICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC5jb2wtNC1jdHIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLmN0ci1hcnQge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAxZW0gMDtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDAuNWVtO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLmN0ci1hcnRfX2ltZyB7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG8gMWVtO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIC5jb2wtdGl0cmUge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjNGY3MTgzO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxZW07XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogLjEwZW07XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdDYWJpbicsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgLmNvbC10ZXh0IHtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDFlbSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjJlbTtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDE2MHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIC5hcnQtbGluayB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IC44MGVtO1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR2ZXJtaWxsb247XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDVlbTtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogLjc1ZW0gMDtcclxuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdDYWJpbicsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuXHRcdFx0XHRcclxuICAgICAgICAgICAgICAgICAgICAmOjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogLTFweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDVlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxLjFlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogLjc1ZW0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjN2JlYmU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn1cclxuLyogUEFHRSA6IEhPTUUgKi8iLCIgLyogUEFHRSA6IENPTlRBQ1QgKi9cclxuXHJcbi8qIFBBR0UgOiBDT05UQUNUICovIiwiLy8gU3R5bGVzIHBhciBkw6lmYXV0LCBtb2JpbGUgZmlyc3Rcbi5zdG4taW50cm8ge1xuXHRAZXh0ZW5kICVjb250YWluZXItbXh3O1xuXHRwYWRkaW5nOiAwIDFlbTtcblxuXHQudGl0cmUtaW50cm8ge1xuXHRcdEBleHRlbmQgJXNlY3Rpb24tdGl0bGUtc21hbGw7XG5cdFx0XG5cdH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJHRhYmxldHRlLXBvcnRyYWl0KSB7XG5cdC5zdG4taW50cm8ge1xuXHRcdC50aXRyZS1pbnRybyB7XG5cdFx0XHRAZXh0ZW5kICVzZWN0aW9uLXRpdGxlLWxhcmdlO1xuXHRcdH1cblx0fVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkbGFwdG9wKSB7fSIsIi8vIFN0eWxlcyBwYXIgZMOpZmF1dCwgbW9iaWxlIGZpcnN0XG4uc3RuLWludHJve1xuICAgIG1hcmdpbjogNWVtIGF1dG87XG4gICAgXG4gICAgLnN0bi1jdHIge1xuICAgICAgICBAZXh0ZW5kICVjb250YWluZXItbXh3O1xuICAgICAgICBcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1ZnIgMmZyO1xuICAgICAgICBncmlkLWNvbHVtbi1nYXA6IDEuNWVtO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIC50aXRyZS1pbnRybyB7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDFlbTtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuY3RyLWxpc3Qge1xuICAgICAgICAgICAgcGFkZGluZzogMS41ZW0gMDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLnR4dC1saXN0ICAge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxldS1mb25jZTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCl7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAuNWVtO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlxcZjBhNFwiO1xuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJGb250IEF3ZXNvbWUgNSBGcmVlXCI7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkdmVybWlsbG9uO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IC41ZW07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLmN0ci1kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmN0ci1pbWctaW50cm8ge1xuICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkdGFibGV0dGUtcG9ydHJhaXQpIHtcbiAgICAuc3RuLWludHJve1xuICAgICAgICBtYXJnaW46IDdlbSBhdXRvIDA7XG4gICAgXG4gICAgICAgIC5zdG4tY3RyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDVmciAyZnI7XG4gICAgICAgICAgICBncmlkLWNvbHVtbi1nYXA6IDEuNWVtO1xuICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgLnRpdHJlLWludHJvIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmN0ci1saXN0IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxLjVlbSAwO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAudHh0LWxpc3QgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxldS1mb25jZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCl7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogLjVlbTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXFxmMGE0XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJGb250IEF3ZXNvbWUgNSBGcmVlXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHZlcm1pbGxvbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLjVlbTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAgICAgLmN0ci1kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC5jdHItaW1nLWludHJvIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IGF1dG87XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRsYXB0b3ApIHt9XG5cblxuIiwiLnN0bi1jb250YWN0IHtcclxuICAgIG1hcmdpbjogM2VtIDA7XHJcblxyXG4gICAgLmN0ci1jb250YWN0e1xyXG4gICAgICAgIHBhZGRpbmc6IDBlbSAxZW07XHJcbiAgICAgICAgQGV4dGVuZCAlY29udGFpbmVyLW14dztcclxuXHJcbiAgICAgICAgLnRpdHJlLWludHJvIHtcclxuICAgICAgICAgICAgY29sb3I6ICRibGV1LWNsYWlyO1xyXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMWVtO1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmN0ci1jb2wtMntcclxuXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDFmcjtcclxuICAgICAgICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAxLjVlbTtcclxuICAgICAgICAgICAgLmN0ci1mb3Jte1xyXG4gICAgICAgICAgICAgICAgLnR4dC1jb250YWN0e1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcclxuICAgICAgICAgICAgICAgICAgICAuY29sb3ItcyB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkdmVybWlsbG9uO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAuY29sb3ItcyB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR2ZXJtaWxsb247XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaW5wdXRbbmFtZT1uYW1lXSwgW25hbWU9ZW1haWxdLCBbbmFtZT1waG9uZV0sIFtuYW1lPW1lc3NhZ2VdIHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogNzAlO1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBsYWJlbCB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDJlbTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpbnB1dFt0eXBlPXN1Ym1pdF17XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAuOTBlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDhlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyLjdlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR2ZXJtaWxsb247XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdDYWJpbicsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmN0ci1tYXBze1xyXG4gICAgICAgICAgICAgICAgLmN0ci1hZHJlc3NlIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMmVtIDA7XHJcbiAgICAgICAgICAgICAgICAgICAgLmNydC1hZHJlc3NlLTF7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAkY29sdW1uLXdpZHRoICogMy8yO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jb2wtdGl0cmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGJsZXUtZm9uY2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLnR4dC1kZXRhaWxzIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjJlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR0YWJsZXR0ZS1wb3J0cmFpdCkge1xyXG4gICAgLnN0bi1jb250YWN0IHtcclxuICAgICAgICAuY3RyLWNvbnRhY3R7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDJlbSAxZW07XHJcbiAgICAgICAgICAgIC5jdHItY29sLTJ7XHJcbiAgICBcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmcjtcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uLWdhcDogMS41ZW07XHJcbiAgICAgICAgICAgICAgICAuY3RyLWZvcm17XHJcbiAgICAgICAgICAgICAgICAgICAgLnR4dC1jb250YWN0e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jb2xvci1zIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkdmVybWlsbG9uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgICAgIC5jdHItbWFwc3tcclxuICAgICAgICAgICAgICAgICAgICAuY3RyLWFkcmVzc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDJlbSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAuY3J0LWFkcmVzc2UtMXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAkY29sdW1uLXdpZHRoICogMy8yO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJjpub3QoOmZpcnN0LWNoaWxkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDJlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNvbC10aXRyZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGJsZXUtZm9uY2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07XHJcbiAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnR4dC1kZXRhaWxzIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMS4yZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIuc3RuLWxlYWRlcnMge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZWRlZDtcclxuICAgIHBhZGRpbmc6IDJlbSAxZW07XHJcblxyXG4gICAgLmN0ci1sZWFkZXJzLWluZm9zIHtcclxuXHJcbiAgICAgICAgQGV4dGVuZCAlY29udGFpbmVyLW14dztcclxuICAgICAgICBtYXJnaW46IDJlbSBhdXRvO1xyXG5cclxuICAgICAgICAudGl0cmUtaW50cm8ge1xyXG4gICAgICAgICAgICBjb2xvcjogJGJsZXUtY2xhaXI7XHJcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS41ZW07XHJcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxZW07XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgIC5jdHItbGlzdHtcclxuXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIC5pbWctbGlzdHtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDFlbSBhdXRvO1xyXG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcblxyXG4gICAgICAgICAgICAgICAgLmltZy1sZWFke1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAuY3RyLWRldGFpbHMtaW5mbyB7XHJcbiAgICAgICAgICAgICAgICAgICAgei1pbmRleDogMjtcclxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE5MzY0NmJkO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2UtaW4tb3V0O1xyXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb24tZGVsYXk6IC4xcztcclxuICAgICAgICAgICAgICAgICAgICBib3R0b206IC01ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogLjJlbSAwO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAubmFtZS1sZWFkIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAucG9zdC1sZWFkIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICY6aG92ZXIgLmN0ci1kZXRhaWxzLWluZm8ge1xyXG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogNHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkdGFibGV0dGUtcG9ydHJhaXQpIHtcclxuLnN0bi1sZWFkZXJzIHtcclxuICAgIHBhZGRpbmc6IDJlbSAxZW07XHJcblxyXG4gICAgLmN0ci1sZWFkZXJzLWluZm9zIHtcclxuXHJcbiAgICAgICAgLnRpdHJlLWludHJvIHtcclxuICAgICAgICAgICAgY29sb3I6ICRibGV1LWNsYWlyO1xyXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMWVtO1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjtcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAuY3RyLWxpc3R7XHJcblxyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICAuaW1nLWxpc3R7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDFlbSAwO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6ICRjb2x1bW4td2lkdGggLyAyO1xyXG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICAgICAgICAgICAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMmVtO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIC5pbWctbGVhZHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgLmN0ci1kZXRhaWxzLWluZm8ge1xyXG4gICAgICAgICAgICAgICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxOTM2NDZiZDtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIC41cyBlYXNlLWluLW91dDtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uLWRlbGF5OiAuMXM7XHJcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAtNWVtO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IC4yZW0gMDtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLm5hbWUtbGVhZCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLnBvc3QtbGVhZCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmOmhvdmVyIC5jdHItZGV0YWlscy1pbmZvIHtcclxuICAgICAgICAgICAgICAgICAgICBib3R0b206IDAlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbn0iLCIvLyBTdHlsZXMgcGFyIGTDqWZhdXQsIG1vYmlsZSBmaXJzdFxyXG4uaG9tZSB7XHJcbiAgICAuc3RuLWluZm8ge1xyXG4gICAgICAgIHBhZGRpbmc6IDNlbSAxZW07XHJcbiAgICAgICAgLmNvbC0yLWN0ciB7XHJcbiAgICAgICAgICAgIEBleHRlbmQgJWNvbnRhaW5lci1teHc7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbSAwO1xyXG5cclxuICAgICAgICAgICAgLmN0ci1hYm91dCB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMS41ZW07XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC5jb2wtdGl0cmUge1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGJsZXUtY2xhaXI7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAxZW0gMDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLmRlc2NyaXB0aW9uLWNvbC0yIHtcclxuICAgICAgICAgICAgICAgICAgICAuY3RyLWNvbC0xIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAuY3RyLWltZ3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLmNvbC0xLXR4dCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50eHQtMSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDFlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMWVtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnR4dC0yIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAuY3RyLWNvbC0yIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLmNvbC0yLXR4dCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50eHQtMSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDFlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMWVtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnR4dC0yIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAuYXJ0LWxpbmsge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IC44MGVtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdmVybWlsbG9uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNWVtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IC43NWVtIDFlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuXHRcdFx0XHRcclxuICAgICAgICAgICAgICAgICAgICAgICAgJjo6YmVmb3Jle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDFweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMnB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDQuODVlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMS4yZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAuNzVlbSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzdiZWJlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmN0ci1uZXdzIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAuY29sLXRpdHJlIHtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxldS1jbGFpcjtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAxZW0gMDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJ0NhYmluJywgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAuZGVzY3JpcHRpb24tcm93LTIge1xyXG4gICAgICAgICAgICAgICAgICAgIC5jdHItY29sLWRhdGUtMXtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jdHItZGF0ZS1ldmVudC0xe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmN0ci1kYXRle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibGV1LWZvbmNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA2MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNjBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5pbmZvLWpvdXIge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuNW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS41ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5pbmZvLW1vaXMge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IC44NWVtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmN0ci10eHQtZXZlbnR7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmN0ci1kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZGF0ZS1vIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkdmVybWlsbG9uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuY3RyLWRlc2NyaXB0aW9uLTJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY3RyLXR4dHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMWVtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR0YWJsZXR0ZS1wb3J0cmFpdCkge1xyXG4gICAgLmhvbWUge1xyXG4gICAgICAgIC5zdG4taW5mbyB7XHJcbiAgICAgICAgICAgIC5jb2wtMi1jdHJ7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgLmN0ci1hYm91dHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAuZGVzY3JpcHRpb24tY29sLTIge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAuY3RyLWNvbC0xIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jdHItaW1ne1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMWVtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC5jdHItbmV3c3tcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkbGFwdG9wKSB7fSIsIi8vIFN0eWxlcyBwYXIgZMOpZmF1dCwgbW9iaWxlIGZpcnN0XHJcbi5zdG4tbWV0aG9kcyB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBcclxuICAgIC50aXRyZS1pbnRybyB7XHJcbiAgICAgICAgQGV4dGVuZCAlc2VjdGlvbi10aXRsZS1zbWFsbDtcclxuICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmO1xyXG4gICAgfVxyXG5cclxuICAgIC5jdHItY29sLTMge1xyXG4gICAgICAgIEBleHRlbmQgJWNvbnRhaW5lci1teHc7XHJcbiAgICAgICAgbWFyZ2luOiAyZW0gYXV0bztcclxuICAgICAgICBwYWRkaW5nOiAxZW0gMWVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC5jdHItbWV0aG9kcyB7XHJcblxyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLm1ldGhvZHMtbGlzdHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMWVtIDA7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcblxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAudHh0LW1ldGhvZHtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAuNWVtO1xyXG4gICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjVlbTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJHRhYmxldHRlLXBvcnRyYWl0KSB7XHJcbiAgICBcclxuICAgIC5zdG4tbWV0aG9kcyB7XHJcbiAgICAgICAgbWFyZ2luOiA1ZW0gMDtcclxuICAgIFxyXG4gICAgICAgIC50aXRyZS1pbnRybyB7XHJcbiAgICAgICAgICAgIEBleHRlbmQgJXNlY3Rpb24tdGl0bGUtbGFyZ2U7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuY3RyLWNvbC0zIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMCAxZW07XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAuY3RyLW1ldGhvZHMge1xyXG4gICAgXHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgLm1ldGhvZHMtbGlzdHtcclxuICAgICAgICAgICAgICAgICAgICAvL21hcmdpbjogMWVtIDFlbTtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJGNvbHVtbi13aWR0aDtcclxuICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMS4yZW07XHJcbiAgICBcclxuICAgICAgICAgICAgICAgICAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDFlbSAxZW07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgICAgICAgICAgLnR4dC1tZXRob2R7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxZW07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRsYXB0b3ApIHt9IiwiLy8gU3R5bGVzIHBhciBkw6lmYXV0LCBtb2JpbGUgZmlyc3Rcbi5jdHItbGlzdC1zZXJ2aWNlcyB7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdHBhZGRpbmc6IDEuNWVtIDA7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cblx0LnNlcnZpY2UtbGlzdCB7XG5cdFx0XG5cdFx0bWFyZ2luOiAxZW0gMDtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuXHRcdFxuXHRcdC5jb2wtdGl0cmUge1xuXHRcdFx0Y29sb3I6ICRibGV1LWZvbmNlO1xuXHRcdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblx0XHRcdG1hcmdpbi1ib3R0b206IDFlbTtcblx0XHRcdGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmO1xuXHRcdFx0XG5cdFx0XHRcblx0XHRcdC5mYS1maWxlLXRleHQtb3tcblx0XHRcdFx0Zm9udC1zaXplOiAyZW07XG5cdFx0XHRcdG1hcmdpbi1yaWdodDogLjJlbTtcblx0XHRcdH1cblx0XHRcdFxuXHRcdFx0LmZhLXVzZXJ7XG5cdFx0XHRcdGZvbnQtc2l6ZTogMmVtO1xuXHRcdFx0XHRtYXJnaW4tcmlnaHQ6IC4yZW07XG5cdFx0XHR9XG5cdFx0XHRcblx0XHRcdC5mYS1iYXItY2hhcnR7XG5cdFx0XHRcdGZvbnQtc2l6ZTogMmVtO1xuXHRcdFx0XHRtYXJnaW4tcmlnaHQ6IC4yZW07XG5cdFx0XHR9XG5cdFx0XHRcblx0XHRcdC5mYS1jb21tZW50e1xuXHRcdFx0XHRmb250LXNpemU6IDJlbTtcblx0XHRcdFx0bWFyZ2luLXJpZ2h0OiAuMmVtO1xuXHRcdFx0fVxuXHRcdFx0XG5cdFx0fVxuXHRcdFxuXHRcdC5jb2wtdGV4dCB7XG5cdFx0XHRmb250LXNpemU6IDFlbTtcblx0XHRcdHBhZGRpbmc6IDFlbSAwO1xuXHRcdH1cblx0XHRcblx0XHQuYXJ0LWxpbmsge1xuXHRcdFx0cG9zaXRpb246IGluaXRpYWw7XG5cdFx0XHRmb250LXNpemU6IC44MGVtO1xuXHRcdFx0Zm9udC13ZWlnaHQ6IDUwMDtcblx0XHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0XHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdFx0XHRjb2xvcjogI2ZmZjtcblx0XHRcdHdpZHRoOiA1ZW07XG5cdFx0XHRwYWRkaW5nOiAuNzVlbSAwO1xuXHRcdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJHZlcm1pbGxvbjtcblx0XHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuXHRcdFx0XHRcblx0XHRcdFx0Jjo6YmVmb3Jle1xuXHRcdFx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdFx0XHR6LWluZGV4OiAtMTtcblx0XHRcdFx0XHR0b3A6IDEuMnB4O1xuXHRcdFx0XHRcdHJpZ2h0OiAtMS4ycHg7XG5cdFx0XHRcdFx0d2lkdGg6IDVlbTtcblx0XHRcdFx0XHRoZWlnaHQ6IDEuMWVtO1xuXHRcdFx0XHRcdHBhZGRpbmc6IC43NWVtIDA7XG5cdFx0XHRcdFx0Y29udGVudDogJyc7XG5cdFx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogI2M3YmViZTtcblx0XHRcdFx0fVxuXG5cdFx0fVxuXHR9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR0YWJsZXR0ZS1wb3J0cmFpdCkge1xuXHRcblx0XG5cdC5jdHItbGlzdC1zZXJ2aWNlcyB7XG5cdFx0cGFkZGluZzogMS41ZW0gMDtcblx0XHRkaXNwbGF5OiBncmlkO1xuXHRcdGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG5cdFx0Z3JpZC1nYXA6IDFlbTtcblx0XHRcblx0XHQuc2VydmljZS1saXN0IHtcblx0XHRcdFxuXHRcdFx0bWFyZ2luOiAxZW0gMDtcblx0XHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHRcdHdpZHRoOiAxMDAlO1xuXHRcdFx0ZGlzcGxheTogZmxleDtcblx0XHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdFx0XHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cdFx0XHRcblx0XHRcdC5jb2wtdGl0cmUge1xuXHRcdFx0XHRjb2xvcjogJGJsZXUtZm9uY2U7XG5cdFx0XHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdFx0XHRcdG1hcmdpbi1ib3R0b206IDFlbTtcblx0XHRcdFx0Zm9udC1mYW1pbHk6ICdDYWJpbicsIHNhbnMtc2VyaWY7XG5cdFx0XHRcdFxuXHRcdFx0XHQuZmEtZmlsZS10ZXh0LW97XG5cdFx0XHRcdFx0Zm9udC1zaXplOiAyZW07XG5cdFx0XHRcdFx0bWFyZ2luLXJpZ2h0OiAuMmVtO1xuXHRcdFx0XHR9XG5cdFx0XHRcdFxuXHRcdFx0XHQuZmEtdXNlcntcblx0XHRcdFx0XHRmb250LXNpemU6IDJlbTtcblx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IC4yZW07XG5cdFx0XHRcdH1cblx0XHRcdFx0XG5cdFx0XHRcdC5mYS1iYXItY2hhcnR7XG5cdFx0XHRcdFx0Zm9udC1zaXplOiAyZW07XG5cdFx0XHRcdFx0bWFyZ2luLXJpZ2h0OiAuMmVtO1xuXHRcdFx0XHR9XG5cdFx0XHRcdFxuXHRcdFx0XHQuZmEtY29tbWVudHtcblx0XHRcdFx0XHRmb250LXNpemU6IDJlbTtcblx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IC4yZW07XG5cdFx0XHRcdH1cblx0XHRcdFx0XG5cdFx0XHR9XG5cdFx0XHRcblx0XHRcdC5jb2wtdGV4dCB7XG5cdFx0XHRcdGZvbnQtc2l6ZTogMWVtO1xuXHRcdFx0XHRwYWRkaW5nOiAxZW0gMDtcblx0XHRcdH1cblx0XHRcdFxuXHRcdFx0LmFydC1saW5rIHtcblx0XHRcdFx0Zm9udC1zaXplOiAuODBlbTtcblx0XHRcdFx0Zm9udC13ZWlnaHQ6IDUwMDtcblx0XHRcdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdFx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXHRcdFx0XHRjb2xvcjogI2ZmZjtcblx0XHRcdFx0d2lkdGg6IDVlbTtcblx0XHRcdFx0cGFkZGluZzogLjc1ZW0gMDtcblx0XHRcdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdFx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICR2ZXJtaWxsb247XG5cdFx0XHRcdGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmO1xuXHRcdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0XHRcblx0XHRcdFx0XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG4iLCIvLyBTdHlsZXMgcGFyIGTDqWZhdXQsIG1vYmlsZSBmaXJzdFxuLnN0bi1zZXJ2aWNlLWluZm8ge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlZGVkO1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDZlbSAxZW07XG5cdGRpc3BsYXk6IGZsZXg7XG5cdFxuXG5cdC5zZXJ2aWNlLWxpc3Qge1xuXHRcdG1hcmdpbjogMWVtIDA7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdHdpZHRoOiAkY29sdW1uLXdpZHRoO1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRcblx0XHQmOm50aC1jaGlsZCgyKXtcblx0XHRcdHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHRcdHBhZGRpbmctdG9wOiAxZW07XG5cdFx0fVxuXHRcdFxuXHRcdCY6bnRoLWNoaWxkKDMpe1xuXHRcdFx0dGV4dC1hbGlnbjogcmlnaHQ7XG5cdFx0XHRwYWRkaW5nLXRvcDogMWVtO1xuXHRcdH1cblx0XHRcblx0XHQuY29sLXRpdHJlIHtcblx0XHRcdGNvbG9yOiAkYmxldS1jbGFpcjtcblx0XHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdFx0XHRmb250LXdlaWdodDogNTAwO1xuXHRcdFx0Zm9udC1mYW1pbHk6ICdDYWJpbicsIHNhbnMtc2VyaWY7XG5cdFx0XHRmb250LXNpemU6IDEuNWVtO1xuXHRcdFx0cGFkZGluZy1ib3R0b206IDFlbTtcblx0XHR9XG5cdFx0XG5cdFx0LmN0ci1saXN0IHtcblx0XHRcdC50eHQtbGlzdHtcblx0XHRcdFx0Y29sb3I6ICRibGV1LWZvbmNlO1xuXHRcdFx0XHRcblx0XHRcdFx0Jjpub3QoOmxhc3QtY2hpbGQpe1xuXHRcdFx0XHRcdHBhZGRpbmctYm90dG9tOiAuNWVtO1xuXHRcdFx0XHR9XG5cdFx0XHRcdFxuXHRcdFx0XHQuZmEtbG9uZy1hcnJvdy1yaWdodCB7XG5cdFx0XHRcdFx0Y29sb3I6ICR2ZXJtaWxsb247XG5cdFx0XHRcdFx0bWFyZ2luLXJpZ2h0OiAuNWVtO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdFxuXHRcdC5jdHItZmFxIHtcblx0XHRcdC5jdHItZGV0YWlsc3tcblx0XHRcdFx0ZGlzcGxheTogZmxleDtcblx0XHRcdFx0XG5cdFx0XHRcdFxuXHRcdFx0XHQmOmZpcnN0LWNoaWxke1xuXHRcdFx0XHRcdG1hcmdpbi1ib3R0b206IDFlbTtcblx0XHRcdFx0fVxuXHRcdFx0XHQucmVwLXEge1xuXHRcdFx0XHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdFx0XHRcdFx0bWFyZ2luLWxlZnQ6IDFlbTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRcblx0XHQuY3RyLWRlc2NyaXB0aW9ue1xuXHRcdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRcdGZvbnQtc2l6ZTogMS4xZW07XG5cdFx0XHRcblx0XHRcdCY6bm90KDpsYXN0LWNoaWxkKXtcblx0XHRcdFx0cGFkZGluZy1ib3R0b206IC41ZW07XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0LmN0ci1saXN0LXNlcnZpY2VzIHtcblx0XHRAZXh0ZW5kICVjb250YWluZXItbXh3O1xuXHRcdG1hcmdpbjogMCBhdXRvO1xuXHRcdC5zZXJ2aWNlLWxpc3Qge1xuXHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0XHRtYXJnaW46IDA7XG5cdFx0fVxuXHR9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR0YWJsZXR0ZS1wb3J0cmFpdCkge1xuXHQuc3RuLXNlcnZpY2UtaW5mbyB7XG5cdFx0LmN0ci1saXN0LXNlcnZpY2VzIHtcblx0XHRcdGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XG5cdFx0XHRcblx0XHRcdC5zZXJ2aWNlLWxpc3Qge1xuXHRcdFx0XHR3aWR0aDogMTAwJTtcblx0XHRcdFx0bWFyZ2luOiAwO1xuXG5cdFx0XHRcdCY6bnRoLWNoaWxkKDIpe1xuXHRcdFx0XHRcdHBhZGRpbmctdG9wOiAwZW07XG5cdFx0XHRcdH1cblx0XHRcdFx0XG5cdFx0XHRcdCY6bnRoLWNoaWxkKDMpe1xuXG5cdFx0XHRcdFx0cGFkZGluZy10b3A6IDBlbTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC5jb2wtdGl0cmUge1xuXHRcdFx0XHRcdGZvbnQtZmFtaWx5OiAnQ2FiaW4nLCBzYW5zLXNlcmlmO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRsYXB0b3ApIHt9Il19 */
